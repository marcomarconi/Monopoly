y <- trading_df$Backadjusted
d <- trading_df$Date
if(on_returns)
y <- c(0,diff(y))
par(mfrow=c(3,1), mar=c(2,2,1,0.5))
# discrete positions
y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% colMeans() %>% as.vector();
y_hat <- e
S <-  1#fit$draws(variables = "S")  %>% merge_chains %>% colMeans() %>% as.vector;
df <- data.frame(Date=d, y=y, pred=lead(y_hat))
if(on_returns) {
df$trade <- (with(df, ifelse(pred>0, 1, ifelse(pred<0, -1, 0)))) * 1 / S;
} else {
df$trade <- (with(df, ifelse(pred>y, 1, ifelse(pred<y, -1, 0)))) * 1 / S;
}
# continuons positions
# y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% matrix(nrow=2000);
# if(!on_returns) {
#   p <- (lead(y_hat) - y) %>% apply(., 2, function(x) table(x>0)/length(x))
# } else {
#   p <- -lead(y_hat) %>% apply(., 2, function(x) table(x>0)/length(x))
# }
# p <- p[1,] - p[2,]
# df <- data.frame(Date=d, y=y, trade = p )
df <- merge(df, daily_df, by="Date", all=T)
df$trade <- na.locf(df$trade, na.rm = FALSE)
df$pnl <- 0.5 * lag(df$trade) * (df$Return1 - df$Return2)
df$pnl[is.na(df$pnl)] <- 0
# plot(df$Date,cumsum(df$pnl))
# colors <- df$pnl; colors[colors>0] <- "blue"; colors[colors<0] <- "red"
# plot(df$Date, df$y, pch=16, type="o", col=colors, cex=2);#lines(df$Date, df$y); #abline(v=seq(tf$Date[1], tf$Date[nrow(tf)] , by=365), lty=2)
# plot.ts(SMA(df$pnl^2,3))
get_returns_statistics(data.frame(df$pnl), period = period, plot=T) %>% unlist
}
# Execute backtest univariate
{
period <- 252
on_returns <- TRUE
fit <- fit_m3.0_rb_cb
daily_df <- rb_cb
trading_df <- monthly_df_rb_cb
y <- trading_df$Backadjusted
d <- trading_df$Date
if(on_returns)
y <- c(0,diff(y))
par(mfrow=c(3,1), mar=c(2,2,1,0.5))
# discrete positions
y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% colMeans() %>% as.vector();
y_hat <- -e
S <-  1#fit$draws(variables = "S")  %>% merge_chains %>% colMeans() %>% as.vector;
df <- data.frame(Date=d, y=y, pred=lead(y_hat))
if(on_returns) {
df$trade <- (with(df, ifelse(pred>0, 1, ifelse(pred<0, -1, 0)))) * 1 / S;
} else {
df$trade <- (with(df, ifelse(pred>y, 1, ifelse(pred<y, -1, 0)))) * 1 / S;
}
# continuons positions
# y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% matrix(nrow=2000);
# if(!on_returns) {
#   p <- (lead(y_hat) - y) %>% apply(., 2, function(x) table(x>0)/length(x))
# } else {
#   p <- -lead(y_hat) %>% apply(., 2, function(x) table(x>0)/length(x))
# }
# p <- p[1,] - p[2,]
# df <- data.frame(Date=d, y=y, trade = p )
df <- merge(df, daily_df, by="Date", all=T)
df$trade <- na.locf(df$trade, na.rm = FALSE)
df$pnl <- 0.5 * lag(df$trade) * (df$Return1 - df$Return2)
df$pnl[is.na(df$pnl)] <- 0
# plot(df$Date,cumsum(df$pnl))
# colors <- df$pnl; colors[colors>0] <- "blue"; colors[colors<0] <- "red"
# plot(df$Date, df$y, pch=16, type="o", col=colors, cex=2);#lines(df$Date, df$y); #abline(v=seq(tf$Date[1], tf$Date[nrow(tf)] , by=365), lty=2)
# plot.ts(SMA(df$pnl^2,3))
get_returns_statistics(data.frame(df$pnl), period = period, plot=T) %>% unlist
}
length(e)
e
e %>% as.vector
z <- e
z[is.na(z)] <- 0
z <- (cumsum(z)+a[147])
plot.ts(z)
plot.ts(a)
a[147]
z <- e
z[is.na(z)] <- 0
z <- (cumsum(z)+a[147])
z <- e
z[is.na(z)] <- 0
z <- (cumsum(z))
plot.ts(z)
lines(a)
plot(z, type="l")
lines(a)
a
lines(a %>% as.vector)
plot(e, a %>% diff)
?ets
# Execute backtest univariate
{
period <- 252
on_returns <- TRUE
fit <- fit_m3.0_rb_cb
daily_df <- rb_cb
trading_df <- monthly_df_rb_cb
y <- trading_df$Backadjusted
d <- trading_df$Date
if(on_returns)
y <- c(0,diff(y))
par(mfrow=c(3,1), mar=c(2,2,1,0.5))
# discrete positions
y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% colMeans() %>% as.vector();
y_hat <- e
S <-  1#fit$draws(variables = "S")  %>% merge_chains %>% colMeans() %>% as.vector;
df <- data.frame(Date=d, y=y, pred=lead(y_hat))
if(on_returns) {
df$trade <- (with(df, ifelse(pred>0, 1, ifelse(pred<0, -1, 0)))) * 1 / S;
} else {
df$trade <- (with(df, ifelse(pred>y, 1, ifelse(pred<y, -1, 0)))) * 1 / S;
}
# continuons positions
# y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% matrix(nrow=2000);
# if(!on_returns) {
#   p <- (lead(y_hat) - y) %>% apply(., 2, function(x) table(x>0)/length(x))
# } else {
#   p <- -lead(y_hat) %>% apply(., 2, function(x) table(x>0)/length(x))
# }
# p <- p[1,] - p[2,]
# df <- data.frame(Date=d, y=y, trade = p )
df <- merge(df, daily_df, by="Date", all=T)
df$trade <- na.locf(df$trade, na.rm = FALSE)
df$pnl <- 0.5 * lag(df$trade) * (df$Return1 - df$Return2)
df$pnl[is.na(df$pnl)] <- 0
# plot(df$Date,cumsum(df$pnl))
# colors <- df$pnl; colors[colors>0] <- "blue"; colors[colors<0] <- "red"
# plot(df$Date, df$y, pch=16, type="o", col=colors, cex=2);#lines(df$Date, df$y); #abline(v=seq(tf$Date[1], tf$Date[nrow(tf)] , by=365), lty=2)
# plot.ts(SMA(df$pnl^2,3))
get_returns_statistics(data.frame(df$pnl), period = period, plot=T) %>% unlist
}
# Execute backtest univariate
{
period <- 252
on_returns <- TRUE
fit <- fit_m3.0_rb_cb
daily_df <- rb_cb
trading_df <- monthly_df_rb_cb
y <- trading_df$Backadjusted
d <- trading_df$Date
if(on_returns)
y <- c(0,diff(y))
par(mfrow=c(3,1), mar=c(2,2,1,0.5))
# discrete positions
y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% colMeans() %>% as.vector();
S <-  1#fit$draws(variables = "S")  %>% merge_chains %>% colMeans() %>% as.vector;
df <- data.frame(Date=d, y=y, pred=lead(y_hat))
if(on_returns) {
df$trade <- (with(df, ifelse(pred>0, 1, ifelse(pred<0, -1, 0)))) * 1 / S;
} else {
df$trade <- (with(df, ifelse(pred>y, 1, ifelse(pred<y, -1, 0)))) * 1 / S;
}
# continuons positions
# y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% matrix(nrow=2000);
# if(!on_returns) {
#   p <- (lead(y_hat) - y) %>% apply(., 2, function(x) table(x>0)/length(x))
# } else {
#   p <- -lead(y_hat) %>% apply(., 2, function(x) table(x>0)/length(x))
# }
# p <- p[1,] - p[2,]
# df <- data.frame(Date=d, y=y, trade = p )
df <- merge(df, daily_df, by="Date", all=T)
df$trade <- na.locf(df$trade, na.rm = FALSE)
df$pnl <- 0.5 * lag(df$trade) * (df$Return1 - df$Return2)
df$pnl[is.na(df$pnl)] <- 0
# plot(df$Date,cumsum(df$pnl))
# colors <- df$pnl; colors[colors>0] <- "blue"; colors[colors<0] <- "red"
# plot(df$Date, df$y, pch=16, type="o", col=colors, cex=2);#lines(df$Date, df$y); #abline(v=seq(tf$Date[1], tf$Date[nrow(tf)] , by=365), lty=2)
# plot.ts(SMA(df$pnl^2,3))
get_returns_statistics(data.frame(df$pnl), period = period, plot=T) %>% unlist
}
# Execute backtest univariate
{
period <- 252
on_returns <- FALSE
fit <- fit_m3.0_rb_cb
daily_df <- rb_cb
trading_df <- monthly_df_rb_cb
y <- trading_df$Backadjusted
d <- trading_df$Date
if(on_returns)
y <- c(0,diff(y))
par(mfrow=c(3,1), mar=c(2,2,1,0.5))
# discrete positions
y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% colMeans() %>% as.vector();
S <-  1#fit$draws(variables = "S")  %>% merge_chains %>% colMeans() %>% as.vector;
df <- data.frame(Date=d, y=y, pred=lead(y_hat))
if(on_returns) {
df$trade <- (with(df, ifelse(pred>0, 1, ifelse(pred<0, -1, 0)))) * 1 / S;
} else {
df$trade <- (with(df, ifelse(pred>y, 1, ifelse(pred<y, -1, 0)))) * 1 / S;
}
# continuons positions
# y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% matrix(nrow=2000);
# if(!on_returns) {
#   p <- (lead(y_hat) - y) %>% apply(., 2, function(x) table(x>0)/length(x))
# } else {
#   p <- -lead(y_hat) %>% apply(., 2, function(x) table(x>0)/length(x))
# }
# p <- p[1,] - p[2,]
# df <- data.frame(Date=d, y=y, trade = p )
df <- merge(df, daily_df, by="Date", all=T)
df$trade <- na.locf(df$trade, na.rm = FALSE)
df$pnl <- 0.5 * lag(df$trade) * (df$Return1 - df$Return2)
df$pnl[is.na(df$pnl)] <- 0
# plot(df$Date,cumsum(df$pnl))
# colors <- df$pnl; colors[colors>0] <- "blue"; colors[colors<0] <- "red"
# plot(df$Date, df$y, pch=16, type="o", col=colors, cex=2);#lines(df$Date, df$y); #abline(v=seq(tf$Date[1], tf$Date[nrow(tf)] , by=365), lty=2)
# plot.ts(SMA(df$pnl^2,3))
get_returns_statistics(data.frame(df$pnl), period = period, plot=T) %>% unlist
}
fit_m3.0_rb_cb
y <- monthly_df_rb_cb$Backadjusted ; fit_m3.0_rb_cb <- m3.0$sample(data=list(N=length(y), y=y, m0=y[1], P0=1, month=1:length(y), period=12, dft=1, h=0, J=ncol(X1), X=X1 , ma=0,garch=1, sigma1=1, level=0,trainset=length(y)),     parallel_chains = 4, iter_warmup = 500, iter_sampling = 500, init=1)
# Execute backtest univariate
{
period <- 252
on_returns <- FALSE
fit <- fit_m3.0_rb_cb
daily_df <- rb_cb
trading_df <- monthly_df_rb_cb
y <- trading_df$Backadjusted
d <- trading_df$Date
if(on_returns)
y <- c(0,diff(y))
par(mfrow=c(3,1), mar=c(2,2,1,0.5))
# discrete positions
y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% colMeans() %>% as.vector();
S <-  1#fit$draws(variables = "S")  %>% merge_chains %>% colMeans() %>% as.vector;
df <- data.frame(Date=d, y=y, pred=lead(y_hat))
if(on_returns) {
df$trade <- (with(df, ifelse(pred>0, 1, ifelse(pred<0, -1, 0)))) * 1 / S;
} else {
df$trade <- (with(df, ifelse(pred>y, 1, ifelse(pred<y, -1, 0)))) * 1 / S;
}
# continuons positions
# y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% matrix(nrow=2000);
# if(!on_returns) {
#   p <- (lead(y_hat) - y) %>% apply(., 2, function(x) table(x>0)/length(x))
# } else {
#   p <- -lead(y_hat) %>% apply(., 2, function(x) table(x>0)/length(x))
# }
# p <- p[1,] - p[2,]
# df <- data.frame(Date=d, y=y, trade = p )
df <- merge(df, daily_df, by="Date", all=T)
df$trade <- na.locf(df$trade, na.rm = FALSE)
df$pnl <- 0.5 * lag(df$trade) * (df$Return1 - df$Return2)
df$pnl[is.na(df$pnl)] <- 0
# plot(df$Date,cumsum(df$pnl))
# colors <- df$pnl; colors[colors>0] <- "blue"; colors[colors<0] <- "red"
# plot(df$Date, df$y, pch=16, type="o", col=colors, cex=2);#lines(df$Date, df$y); #abline(v=seq(tf$Date[1], tf$Date[nrow(tf)] , by=365), lty=2)
# plot.ts(SMA(df$pnl^2,3))
get_returns_statistics(data.frame(df$pnl), period = period, plot=T) %>% unlist
}
y <- monthly_df_rb_cb$Backadjusted ; fit_m3.0_rb_cb_ <- m3.0$sample(data=list(N=length(y), y=y, m0=y[1], P0=1, month=1:length(y), period=12, dft=1, h=0, J=ncol(X1), X=X1 , ma=0,garch=1, sigma1=1, level=0,trainset=length(y)/2),     parallel_chains = 4, iter_warmup = 500, iter_sampling = 500, init=1)
# Execute backtest univariate
{
period <- 252
on_returns <- FALSE
fit <- fit_m3.0_rb_cb_
daily_df <- rb_cb
trading_df <- monthly_df_rb_cb
y <- trading_df$Backadjusted
d <- trading_df$Date
if(on_returns)
y <- c(0,diff(y))
par(mfrow=c(3,1), mar=c(2,2,1,0.5))
# discrete positions
y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% colMeans() %>% as.vector();
S <-  1#fit$draws(variables = "S")  %>% merge_chains %>% colMeans() %>% as.vector;
df <- data.frame(Date=d, y=y, pred=lead(y_hat))
if(on_returns) {
df$trade <- (with(df, ifelse(pred>0, 1, ifelse(pred<0, -1, 0)))) * 1 / S;
} else {
df$trade <- (with(df, ifelse(pred>y, 1, ifelse(pred<y, -1, 0)))) * 1 / S;
}
# continuons positions
# y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% matrix(nrow=2000);
# if(!on_returns) {
#   p <- (lead(y_hat) - y) %>% apply(., 2, function(x) table(x>0)/length(x))
# } else {
#   p <- -lead(y_hat) %>% apply(., 2, function(x) table(x>0)/length(x))
# }
# p <- p[1,] - p[2,]
# df <- data.frame(Date=d, y=y, trade = p )
df <- merge(df, daily_df, by="Date", all=T)
df$trade <- na.locf(df$trade, na.rm = FALSE)
df$pnl <- 0.5 * lag(df$trade) * (df$Return1 - df$Return2)
df$pnl[is.na(df$pnl)] <- 0
# plot(df$Date,cumsum(df$pnl))
# colors <- df$pnl; colors[colors>0] <- "blue"; colors[colors<0] <- "red"
# plot(df$Date, df$y, pch=16, type="o", col=colors, cex=2);#lines(df$Date, df$y); #abline(v=seq(tf$Date[1], tf$Date[nrow(tf)] , by=365), lty=2)
# plot.ts(SMA(df$pnl^2,3))
get_returns_statistics(data.frame(df$pnl), period = period, plot=T) %>% unlist
}
y <- monthly_df_rb_cb$Backadjusted ; fit_m3.0_rb_cb_ <- m3.0$sample(data=list(N=length(y), y=y, m0=y[1], P0=1, month=1:length(y), period=12, dft=2, h=0, J=ncol(X2), X=X2 , ma=0,garch=1, sigma1=1, level=0,trainset=length(y)/2),     parallel_chains = 4, iter_warmup = 500, iter_sampling = 500, init=1)
# Execute backtest univariate
{
period <- 252
on_returns <- FALSE
fit <- fit_m3.0_rb_cb_
daily_df <- rb_cb
trading_df <- monthly_df_rb_cb
y <- trading_df$Backadjusted
d <- trading_df$Date
if(on_returns)
y <- c(0,diff(y))
par(mfrow=c(3,1), mar=c(2,2,1,0.5))
# discrete positions
y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% colMeans() %>% as.vector();
S <-  1#fit$draws(variables = "S")  %>% merge_chains %>% colMeans() %>% as.vector;
df <- data.frame(Date=d, y=y, pred=lead(y_hat))
if(on_returns) {
df$trade <- (with(df, ifelse(pred>0, 1, ifelse(pred<0, -1, 0)))) * 1 / S;
} else {
df$trade <- (with(df, ifelse(pred>y, 1, ifelse(pred<y, -1, 0)))) * 1 / S;
}
# continuons positions
# y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% matrix(nrow=2000);
# if(!on_returns) {
#   p <- (lead(y_hat) - y) %>% apply(., 2, function(x) table(x>0)/length(x))
# } else {
#   p <- -lead(y_hat) %>% apply(., 2, function(x) table(x>0)/length(x))
# }
# p <- p[1,] - p[2,]
# df <- data.frame(Date=d, y=y, trade = p )
df <- merge(df, daily_df, by="Date", all=T)
df$trade <- na.locf(df$trade, na.rm = FALSE)
df$pnl <- 0.5 * lag(df$trade) * (df$Return1 - df$Return2)
df$pnl[is.na(df$pnl)] <- 0
# plot(df$Date,cumsum(df$pnl))
# colors <- df$pnl; colors[colors>0] <- "blue"; colors[colors<0] <- "red"
# plot(df$Date, df$y, pch=16, type="o", col=colors, cex=2);#lines(df$Date, df$y); #abline(v=seq(tf$Date[1], tf$Date[nrow(tf)] , by=365), lty=2)
# plot.ts(SMA(df$pnl^2,3))
get_returns_statistics(data.frame(df$pnl), period = period, plot=T) %>% unlist
}
y <- monthly_df_rb_cb$Backadjusted ; fit_m3.0_rb_cb <- m3.0$sample(data=list(N=length(y), y=y, m0=y[1], P0=1, month=1:length(y), period=12, dft=2, h=0, J=ncol(X2), X=X2 , ma=0,garch=1, sigma1=1, level=0,trainset=length(y)),     parallel_chains = 4, iter_warmup = 500, iter_sampling = 500, init=1)
# Execute backtest univariate
{
period <- 252
on_returns <- FALSE
fit <- fit_m3.0_rb_cb_
daily_df <- rb_cb
trading_df <- monthly_df_rb_cb
y <- trading_df$Backadjusted
d <- trading_df$Date
if(on_returns)
y <- c(0,diff(y))
par(mfrow=c(3,1), mar=c(2,2,1,0.5))
# discrete positions
y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% colMeans() %>% as.vector();
S <-  1#fit$draws(variables = "S")  %>% merge_chains %>% colMeans() %>% as.vector;
df <- data.frame(Date=d, y=y, pred=lead(y_hat))
if(on_returns) {
df$trade <- (with(df, ifelse(pred>0, 1, ifelse(pred<0, -1, 0)))) * 1 / S;
} else {
df$trade <- (with(df, ifelse(pred>y, 1, ifelse(pred<y, -1, 0)))) * 1 / S;
}
# continuons positions
# y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% matrix(nrow=2000);
# if(!on_returns) {
#   p <- (lead(y_hat) - y) %>% apply(., 2, function(x) table(x>0)/length(x))
# } else {
#   p <- -lead(y_hat) %>% apply(., 2, function(x) table(x>0)/length(x))
# }
# p <- p[1,] - p[2,]
# df <- data.frame(Date=d, y=y, trade = p )
df <- merge(df, daily_df, by="Date", all=T)
df$trade <- na.locf(df$trade, na.rm = FALSE)
df$pnl <- 0.5 * lag(df$trade) * (df$Return1 - df$Return2)
df$pnl[is.na(df$pnl)] <- 0
# plot(df$Date,cumsum(df$pnl))
# colors <- df$pnl; colors[colors>0] <- "blue"; colors[colors<0] <- "red"
# plot(df$Date, df$y, pch=16, type="o", col=colors, cex=2);#lines(df$Date, df$y); #abline(v=seq(tf$Date[1], tf$Date[nrow(tf)] , by=365), lty=2)
# plot.ts(SMA(df$pnl^2,3))
get_returns_statistics(data.frame(df$pnl), period = period, plot=T) %>% unlist
}
fit_m3.0_rb_cb
y <- monthly_df_rb_cb$Backadjusted ; fit_m3.0_rb_cb <- m3.0$sample(data=list(N=length(y), y=y, m0=y[1], P0=1, month=1:length(y), period=12, dft=2, h=0, J=ncol(X2), X=X2 , ma=0,garch=1, sigma1=1, level=0,trainset=length(y)),     parallel_chains = 4, iter_warmup = 500, iter_sampling = 500, init=1)
fit_m3.0_rb_cb
y <- monthly_df_rb_cb$Backadjusted ; fit_m3.0_rb_cb <- m3.0$sample(data=list(N=length(y), y=y, m0=y[1], P0=1, month=1:length(y), period=12, dft=2, h=0, J=ncol(X2), X=X2 , ma=0,garch=1, sigma1=1, level=0,trainset=length(y)),     parallel_chains = 4, iter_warmup = 1000, iter_sampling = 1000, init=1)
fit_m3.0_rb_cb
# Execute backtest univariate
{
period <- 252
on_returns <- FALSE
fit <- fit_m3.0_rb_cb
daily_df <- rb_cb
trading_df <- monthly_df_rb_cb
y <- trading_df$Backadjusted
d <- trading_df$Date
if(on_returns)
y <- c(0,diff(y))
par(mfrow=c(3,1), mar=c(2,2,1,0.5))
# discrete positions
y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% colMeans() %>% as.vector();
S <-  1#fit$draws(variables = "S")  %>% merge_chains %>% colMeans() %>% as.vector;
df <- data.frame(Date=d, y=y, pred=lead(y_hat))
if(on_returns) {
df$trade <- (with(df, ifelse(pred>0, 1, ifelse(pred<0, -1, 0)))) * 1 / S;
} else {
df$trade <- (with(df, ifelse(pred>y, 1, ifelse(pred<y, -1, 0)))) * 1 / S;
}
# continuons positions
# y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% matrix(nrow=2000);
# if(!on_returns) {
#   p <- (lead(y_hat) - y) %>% apply(., 2, function(x) table(x>0)/length(x))
# } else {
#   p <- -lead(y_hat) %>% apply(., 2, function(x) table(x>0)/length(x))
# }
# p <- p[1,] - p[2,]
# df <- data.frame(Date=d, y=y, trade = p )
df <- merge(df, daily_df, by="Date", all=T)
df$trade <- na.locf(df$trade, na.rm = FALSE)
df$pnl <- 0.5 * lag(df$trade) * (df$Return1 - df$Return2)
df$pnl[is.na(df$pnl)] <- 0
# plot(df$Date,cumsum(df$pnl))
# colors <- df$pnl; colors[colors>0] <- "blue"; colors[colors<0] <- "red"
# plot(df$Date, df$y, pch=16, type="o", col=colors, cex=2);#lines(df$Date, df$y); #abline(v=seq(tf$Date[1], tf$Date[nrow(tf)] , by=365), lty=2)
# plot.ts(SMA(df$pnl^2,3))
get_returns_statistics(data.frame(df$pnl), period = period, plot=T) %>% unlist
}
y <- monthly_df_rb_cb$Backadjusted ; fit_m3.0_rb_cb <- m3.0$sample(data=list(N=length(y), y=y, m0=y[1], P0=1, month=1:length(y), period=12, dft=2, h=0, J=ncol(X2), X=X2 , ma=0,garch=1, sigma1=1, level=0,trainset=length(y)/2),     parallel_chains = 4, iter_warmup = 1000, iter_sampling = 1000, init=1)
fit_m3.0_rb_cb
# Execute backtest univariate
{
period <- 252
on_returns <- FALSE
fit <- fit_m3.0_rb_cb
daily_df <- rb_cb
trading_df <- monthly_df_rb_cb
y <- trading_df$Backadjusted
d <- trading_df$Date
if(on_returns)
y <- c(0,diff(y))
par(mfrow=c(3,1), mar=c(2,2,1,0.5))
# discrete positions
y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% colMeans() %>% as.vector();
S <-  1#fit$draws(variables = "S")  %>% merge_chains %>% colMeans() %>% as.vector;
df <- data.frame(Date=d, y=y, pred=lead(y_hat))
if(on_returns) {
df$trade <- (with(df, ifelse(pred>0, 1, ifelse(pred<0, -1, 0)))) * 1 / S;
} else {
df$trade <- (with(df, ifelse(pred>y, 1, ifelse(pred<y, -1, 0)))) * 1 / S;
}
# continuons positions
# y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% matrix(nrow=2000);
# if(!on_returns) {
#   p <- (lead(y_hat) - y) %>% apply(., 2, function(x) table(x>0)/length(x))
# } else {
#   p <- -lead(y_hat) %>% apply(., 2, function(x) table(x>0)/length(x))
# }
# p <- p[1,] - p[2,]
# df <- data.frame(Date=d, y=y, trade = p )
df <- merge(df, daily_df, by="Date", all=T)
df$trade <- na.locf(df$trade, na.rm = FALSE)
df$pnl <- 0.5 * lag(df$trade) * (df$Return1 - df$Return2)
df$pnl[is.na(df$pnl)] <- 0
# plot(df$Date,cumsum(df$pnl))
# colors <- df$pnl; colors[colors>0] <- "blue"; colors[colors<0] <- "red"
# plot(df$Date, df$y, pch=16, type="o", col=colors, cex=2);#lines(df$Date, df$y); #abline(v=seq(tf$Date[1], tf$Date[nrow(tf)] , by=365), lty=2)
# plot.ts(SMA(df$pnl^2,3))
get_returns_statistics(data.frame(df$pnl), period = period, plot=T) %>% unlist
}
y <- monthly_df_rb_cb$Backadjusted ; fit_m3.0_rb_cb <- m3.0$sample(data=list(N=length(y), y=y, m0=y[1], P0=1, month=1:length(y), period=12, dft=2, h=0, J=ncol(X1), X=X1 , ma=0,garch=1, sigma1=1, level=0,trainset=length(y)),     parallel_chains = 4, iter_warmup = 1000, iter_sampling = 1000, init=1)
# Execute backtest univariate
{
period <- 252
on_returns <- FALSE
fit <- fit_m3.0_rb_cb
daily_df <- rb_cb
trading_df <- monthly_df_rb_cb
y <- trading_df$Backadjusted
d <- trading_df$Date
if(on_returns)
y <- c(0,diff(y))
par(mfrow=c(3,1), mar=c(2,2,1,0.5))
# discrete positions
y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% colMeans() %>% as.vector();
S <-  1#fit$draws(variables = "S")  %>% merge_chains %>% colMeans() %>% as.vector;
df <- data.frame(Date=d, y=y, pred=lead(y_hat))
if(on_returns) {
df$trade <- (with(df, ifelse(pred>0, 1, ifelse(pred<0, -1, 0)))) * 1 / S;
} else {
df$trade <- (with(df, ifelse(pred>y, 1, ifelse(pred<y, -1, 0)))) * 1 / S;
}
# continuons positions
# y_hat <-  fit$draws(variables = "y_hat")  %>% merge_chains %>% matrix(nrow=2000);
# if(!on_returns) {
#   p <- (lead(y_hat) - y) %>% apply(., 2, function(x) table(x>0)/length(x))
# } else {
#   p <- -lead(y_hat) %>% apply(., 2, function(x) table(x>0)/length(x))
# }
# p <- p[1,] - p[2,]
# df <- data.frame(Date=d, y=y, trade = p )
df <- merge(df, daily_df, by="Date", all=T)
df$trade <- na.locf(df$trade, na.rm = FALSE)
df$pnl <- 0.5 * lag(df$trade) * (df$Return1 - df$Return2)
df$pnl[is.na(df$pnl)] <- 0
# plot(df$Date,cumsum(df$pnl))
# colors <- df$pnl; colors[colors>0] <- "blue"; colors[colors<0] <- "red"
# plot(df$Date, df$y, pch=16, type="o", col=colors, cex=2);#lines(df$Date, df$y); #abline(v=seq(tf$Date[1], tf$Date[nrow(tf)] , by=365), lty=2)
# plot.ts(SMA(df$pnl^2,3))
get_returns_statistics(data.frame(df$pnl), period = period, plot=T) %>% unlist
}
