dir <- paste0("/home/marco/trading/HistoricalData/Barchart/", name)
expiry_df <- load_expiry_file(paste0(dir, "/", "expirations.txt"))
df <- load_future_contracts_long(symbol, dir, expiry_df)
Futures_long[[symbol]] <- df
# calculate the contracts combinations to pass to build_spreads
contracts <- df %>%  group_by(Symbol) %>% arrange(Date) %>% group_by(Date) %>% mutate(Contract = row_number())
max_level <- min(c(5, max(contracts$Contract)))
contract_spreads <- cbind(1:(max_level-1), 2:max_level) %>% apply(., 1, c, simplify = F)
Spreads[[symbol]] <- build_spreads(df, C = contract_spreads)
}
symbol <- "XN"
name <- "CornMini"
print(paste(symbol, name))
dir <- paste0("/home/marco/trading/HistoricalData/Barchart/", name)
expiry_df <- load_expiry_file(paste0(dir, "/", "expirations.txt"))
expiry_df
expiry_df %>% problem
expiry_df %>% problems
file <- paste0(dir, "/", "expirations.txt")
f <- read_csv(file, show_col_types = FALSE, col_names = FALSE) %>% rename(Symbol=X1, Date=X2) %>% mutate(Date=as.Date(Date, format="%m/%d/%y")) %>% arrange(Date)
problems(f)
f <- read_csv(file, show_col_types = FALSE, col_names = FALSE)
problems(f)
write_rds(Futures_long, "/home/marco/trading/HistoricalData/Barchart/Futures_long.RDS")
write_rds(Spreads, "/home/marco/trading/HistoricalData/Barchart/Spreads.RDS")
# Plot spreads stuff
Futures_long <- read_rds( "/home/marco/trading/HistoricalData/Barchart/Futures_long.RDS")
Spreads <- read_rds( "/home/marco/trading/HistoricalData/Barchart/Spreads.RDS")
symbol <- "HN"
print(symbol)
spreads <- Spreads[[symbol]]
spreads_returns <- spreads %>% filter(Date > "2000-01-01" &  DTE1 > 0) %>%  group_by(Contracts) %>% arrange(Date) %>% na.omit %>% filter(n() > 32 ) %>%
mutate(SpreadVol = runSD(SpreadReturn, 32),SpreadVol = na.locf(SpreadVol, na.rm=F), scaledreturns = 0.2 / lag(SpreadVol) * SpreadReturn * sqrt(252), scaledreturns = replace(scaledreturns, is.infinite(scaledreturns), 0),
) %>% filter(abs(scaledreturns) < sd(scaledreturns, na.rm=T)*2) %>%   ungroup %>%    na.omit()
spreads_returns <- spreads %>% filter(Date > "2000-01-01" &  DTE1 > 0) %>%  group_by(Contracts) %>% arrange(Date) %>% na.omit %>% filter(n() > 32 ) %>%
mutate(SpreadVol = runSD(SpreadReturnLog, 32),SpreadVol = na.locf(SpreadVol, na.rm=F), scaledreturns = 0.2 / lag(SpreadVol) * SpreadReturn * sqrt(252), scaledreturns = replace(scaledreturns, is.infinite(scaledreturns), 0),
) %>% filter(abs(scaledreturns) < sd(scaledreturns, na.rm=T)*2) %>%   ungroup %>%    na.omit()
spreads_returns <- spreads %>% filter(Date > "2000-01-01" &  DTE1 > 0) %>%  group_by(Contracts) %>% arrange(Date) %>% na.omit %>% filter(n() > 32 ) %>%
mutate(SpreadVol = runSD(SpreadReturnLog, 32),SpreadVol = na.locf(SpreadVol, na.rm=F), scaledreturns = 0.2 / lag(SpreadVol) * SpreadReturnLog * sqrt(252), scaledreturns = replace(scaledreturns, is.infinite(scaledreturns), 0),
) %>% filter(abs(scaledreturns) < sd(scaledreturns, na.rm=T)*2) %>%   ungroup %>%    na.omit()
infos <- to_load[to_load$Symbol==symbol,][,2:3] %>% unlist
res_ <- spreads_returns %>%  group_by(Contracts) %>%  arrange(Date) %>%  filter(n() > 252+32) %>% mutate(
Level_Z = runZscore(Price1, 252),
LevelLag = ntile(lag(Level_Z), 5),
Slope_Z = runZscore(SpreadLog, 252),
SlopeLag = ntile(lag(Slope_Z), 5),
Momentum = EMA(SpreadReturn, 32),
Momentum_Z = runZscore(Momentum, 252),
MomentumLag = ntile(lag(Momentum_Z), 5),
Carry = SpreadLog / (abs(DTE2-DTE1) / 252),
CarryLag = ntile(lag(Carry), 5)
) %>% na.omit
res_ <- spreads_returns %>%  group_by(Contracts) %>%  arrange(Date) %>%  filter(n() > 252+32) %>% mutate(
Level_Z = runZscore(Price1, 252),
LevelLag = ntile(lag(Level_Z), 5),
Slope_Z = runZscore(SpreadLog, 252),
SlopeLag = ntile(lag(Slope_Z), 5),
Momentum = EMA(SpreadReturnLog, 32),
Momentum_Z = runZscore(Momentum, 252),
MomentumLag = ntile(lag(Momentum_Z), 5),
Carry = SpreadLog / (abs(DTE2-DTE1) / 252),
CarryLag = ntile(lag(Carry), 5)
) %>% na.omit
res_ %>% na.omit %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~0), Excess = SpreadReturn * lag(-Momentum_Z), PnL=cumsum(Excess)) %>% filter(Contracts=="c_12") %>% pull(Excess) %>% na.omit-> a
res_ %>% na.omit %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~0), Excess = SpreadReturnLog * lag(-Momentum_Z), PnL=cumsum(Excess)) %>% filter(Contracts=="c_12") %>% pull(Excess) %>% na.omit-> a
mean(a)/sd(a)*16
res_ %>% na.omit %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~0), Excess = SpreadReturnPoint * lag(-Momentum_Z), PnL=cumsum(Excess)) %>% filter(Contracts=="c_12") %>% pull(Excess) %>% na.omit-> a
mean(a)/sd(a)*16
res_ %>% na.omit %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~0), Excess = SpreadReturnPoint * lag(-Momentum_Z), PnL=cumsum(Excess)) %>% filter(Contracts=="c_12") -> a
head(a)
View(a)
res_ %>% na.omit %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~Momentum_Z), Excess = SpreadReturnPoint * lag(-Momentum_Z), PnL=cumsum(Excess)) %>% filter(Contracts=="c_12") -> a
mean(a$Excess)/sd(a$Excess)*16
res_ %>% na.omit %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~Momentum_Z), Excess = SpreadReturnPoint * lag(-Momentum_Z), PnL=cumsum(Excess)) %>% filter(Contracts=="c_12") %>% na.omit -> a
mean(a$Excess)/sd(a$Excess)*16
res_ %>% na.omit %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~Momentum_Z), Excess = SpreadReturnPoint * lag(-Momentum_Z), PnL=cumsum(Excess)) %>% filter(Contracts=="c_12") -> a
res_ %>% na.omit %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~Momentum_Z), Excess = SpreadReturnPoint * lag(-Momentum_Z), Excess=replace_na(Excess, 0), PnL=cumsum(Excess)) %>% filter(Contracts=="c_12") -> a
mean(a$Excess)/sd(a$Excess)*16
res_ %>% na.omit %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~Momentum_Z), Excess = SpreadReturnLog * lag(-Momentum_Z), Excess=replace_na(Excess, 0), PnL=cumsum(Excess)) %>% filter(Contracts=="c_12") -> a
mean(a$Excess)/sd(a$Excess)*16
plot.ts(a$Momentum_Z)
res_ %>% na.omit %>% mutate(Momentum_Z = sign(Momentum_Z), Excess = SpreadReturnLog * lag(-Momentum_Z), Excess=replace_na(Excess, 0), PnL=cumsum(Excess)) %>% filter(Contracts=="c_12") -> a
mean(a$Excess)/sd(a$Excess)*16
View(a)
res_ %>% na.omit %>% mutate(Momentum_Z = sign(Momentum_Z), Excess = SpreadReturnLog * lag(-Momentum_Z,2), Excess=replace_na(Excess, 0), PnL=cumsum(Excess)) %>% filter(Contracts=="c_12") -> a
View(a)
mean(a$Excess)/sd(a$Excess)*16
res_ %>% na.omit %>% mutate(Momentum_Z = -sign(Momentum_Z), Excess = SpreadReturnLog * lag(Momentum_Z,2), Excess=replace_na(Excess, 0), PnL=cumsum(Excess)) %>% filter(Contracts=="c_12") -> a
mean(a$Excess)/sd(a$Excess)*16
res_ %>% na.omit %>% mutate(Momentum_Z = -sign(Momentum_Z), Excess = SpreadReturnLog * lag(Momentum_Z,1), Excess=replace_na(Excess, 0), PnL=cumsum(Excess)) %>% filter(Contracts=="c_12") -> a
mean(a$Excess)/sd(a$Excess)*16
res_ %>% %>% filter(Contracts=="c_12") %>% mutate(Momentum_Z = -sign(Momentum_Z), Excess = SpreadReturnLog * lag(Momentum_Z,1), Excess=replace_na(Excess, 0), PnL=cumsum(Excess))  -> a
res_ %>% filter(Contracts=="c_12") %>% mutate(Momentum_Z = -sign(Momentum_Z), Excess = SpreadReturnLog * lag(Momentum_Z,1), Excess=replace_na(Excess, 0), PnL=cumsum(Excess))  -> a
mean(a$Excess)/sd(a$Excess)*16
res_ %>% filter(Contracts=="c_12") %>% mutate(Momentum_Z = -sign(Momentum_Z), Excess = SpreadReturnLog * lag(Momentum_Z,2), Excess=replace_na(Excess, 0), PnL=cumsum(Excess))  -> a
mean(a$Excess)/sd(a$Excess)*16
symbol
#if(symbol != "GR") next
spreads <- Spreads[[symbol]]
# Calculate vol adj spread returns, ignore the last trading day and contracts shorter than the running window
spreads_returns <- spreads %>% filter(Date > "2000-01-01" &  DTE1 > 0) %>%  group_by(Contracts) %>% arrange(Date) %>% na.omit %>% filter(n() > 32 ) %>%
mutate(
SpreadVol = runSD(SpreadReturn, 32), SpreadVol = na.locf(SpreadVol, na.rm=F),
FrontVol = runSD(Return1, 32), FrontVol = na.locf(FrontVol, na.rm=F),
scaledreturns = 0.2 / lag(SpreadVol) * SpreadReturn * sqrt(252),
scaledreturns = replace(scaledreturns, is.infinite(scaledreturns) | is.na(scaledreturns), 0),
SpreadLogAdj = SpreadLog / SpreadVol
) %>%   ungroup %>%    na.omit()
# Calculate vol adj spread returns, ignore the last trading day and contracts shorter than the running window
spreads_returns <- spreads %>% filter(Date > "2000-01-01" &  DTE1 > 0) %>%  group_by(Contracts) %>% arrange(Date) %>% na.omit %>% filter(n() > 32 ) %>%
mutate(
SpreadVol = runSD(SpreadReturnLog, 32), SpreadVol = na.locf(SpreadVol, na.rm=F),
FrontVol = runSD(Return1, 32), FrontVol = na.locf(FrontVol, na.rm=F),
scaledreturns = 0.2 / lag(SpreadVol) * SpreadReturnLog * sqrt(252),
scaledreturns = replace(scaledreturns, is.infinite(scaledreturns) | is.na(scaledreturns), 0),
SpreadLogAdj = SpreadLog / SpreadVol
) %>%   ungroup %>%    na.omit()
# Calculate vol adj spread returns, ignore the last trading day and contracts shorter than the running window
spreads_returns <- spreads %>% filter(Date > "2000-01-01" &  DTE1 > 0) %>%  group_by(Contracts) %>% arrange(Date) %>% na.omit %>% filter(n() > 32 ) %>%
mutate(
SpreadVol = runSD(SpreadReturnLog, 32), SpreadVol = na.locf(SpreadVol, na.rm=F),
FrontVol = runSD(ReturnLog1, 32), FrontVol = na.locf(FrontVol, na.rm=F),
scaledreturns = 0.2 / lag(SpreadVol) * SpreadReturnLog * sqrt(252),
scaledreturns = replace(scaledreturns, is.infinite(scaledreturns) | is.na(scaledreturns), 0),
SpreadLogAdj = SpreadLog / SpreadVol
) %>%   ungroup %>%    na.omit()
#            spreads_returns  %>% mutate(Volatility=SpreadVol) %>% select(Contracts, Volatility)) %>% mutate(Volatility=Volatility*sqrt(252)) %>% na.omit %>%
#   group_by(Contracts) %>% reframe(M=mean(Volatility), S=sd(Volatility)*1)
# p <- ggplot(res, aes(x=Contracts, y=M, ymin=M-S, ymax=M+S)) + geom_pointrange(linewidth=1, size=1)
# ggsave(paste(symbol, "_VolSpread.png"), p, width=15, height = 9, dpi=100)
## Performance of trading the front spread by DTE
# res <-  spreads_returns %>%  mutate(Decile = round(DTE1 / 10)) %>% filter(Decile < 10) %>%
#   group_by(Contracts, Decile) %>% reframe(M=mean(scaledreturns, na.rm=T), S=sd(scaledreturns, na.rm=T)/sqrt(n())*2)
# p <- ggplot(res) + geom_errorbar(aes(x=Decile, ymin=M-S, ymax=M+S), width=0.5) + facet_wrap(~Contracts, scales = "free")  + geom_hline(yintercept = 0)+scale_x_continuous(breaks = 0:9)
# ggsave(paste(symbol, "_DTE.png"), p, width=15, height = 9, dpi=100)
## Performance of trading the front spread, conditional on predictors
res_ <- spreads_returns %>%  group_by(Contracts) %>%  arrange(Date) %>%  filter(n() > 252+32) %>% mutate(
Level_Z = runZscore(Price1, 252),
LevelLag = ntile(lag(Level_Z), 5),
Slope_Z = runZscore(SpreadLog, 252),
SlopeLag = ntile(lag(Slope_Z), 5),
Momentum = EMA(SpreadReturn, 32),
Momentum_Z = runZscore(Momentum, 252),
MomentumLag = ntile(lag(Momentum_Z), 5),
Carry = SpreadLog / (abs(DTE2-DTE1) / 252),
CarryLag = ntile(lag(Carry), 5)
) %>% na.omit
#            spreads_returns  %>% mutate(Volatility=SpreadVol) %>% select(Contracts, Volatility)) %>% mutate(Volatility=Volatility*sqrt(252)) %>% na.omit %>%
#   group_by(Contracts) %>% reframe(M=mean(Volatility), S=sd(Volatility)*1)
# p <- ggplot(res, aes(x=Contracts, y=M, ymin=M-S, ymax=M+S)) + geom_pointrange(linewidth=1, size=1)
# ggsave(paste(symbol, "_VolSpread.png"), p, width=15, height = 9, dpi=100)
## Performance of trading the front spread by DTE
# res <-  spreads_returns %>%  mutate(Decile = round(DTE1 / 10)) %>% filter(Decile < 10) %>%
#   group_by(Contracts, Decile) %>% reframe(M=mean(scaledreturns, na.rm=T), S=sd(scaledreturns, na.rm=T)/sqrt(n())*2)
# p <- ggplot(res) + geom_errorbar(aes(x=Decile, ymin=M-S, ymax=M+S), width=0.5) + facet_wrap(~Contracts, scales = "free")  + geom_hline(yintercept = 0)+scale_x_continuous(breaks = 0:9)
# ggsave(paste(symbol, "_DTE.png"), p, width=15, height = 9, dpi=100)
## Performance of trading the front spread, conditional on predictors
res_ <- spreads_returns %>%  group_by(Contracts) %>%  arrange(Date) %>%  filter(n() > 252+32) %>% mutate(
Level_Z = runZscore(Price1, 252),
LevelLag = ntile(lag(Level_Z), 5),
Slope_Z = runZscore(SpreadLog, 252),
SlopeLag = ntile(lag(Slope_Z), 5),
Momentum = EMA(SpreadReturnLog, 32),
Momentum_Z = runZscore(Momentum, 252),
MomentumLag = ntile(lag(Momentum_Z), 5),
Carry = SpreadLog / (abs(DTE2-DTE1) / 252),
CarryLag = ntile(lag(Carry), 5)
) %>% na.omit
res <- res_ %>% group_by(Contracts, SlopeLag) %>% reframe(M = mean(scaledreturns), S = sd(scaledreturns)/sqrt(n())*2) %>% na.omit
p <- ggplot(res) + geom_errorbar(aes(x=SlopeLag, ymin=M-S, ymax=M+S), width=0.25) + facet_wrap(~Contracts, scales = "free")  + geom_hline(yintercept = 0)+scale_x_continuous(breaks = 0:9)
p
res <- res_ %>% group_by(Contracts, MomentumLag) %>% reframe(M = mean(scaledreturns), S = sd(scaledreturns)/sqrt(n())*2)
p <- ggplot(res) + geom_errorbar(aes(x=MomentumLag, ymin=M-S, ymax=M+S), width=0.25) + facet_wrap(~Contracts, scales = "free")  + geom_hline(yintercept = 0)+scale_x_continuous(breaks = 0:9)
p
res_ %>% filter(Contracts=="c_12") %>% mutate(Momentum_Z = -sign(Momentum_Z), Excess = SpreadReturnLog * lag(Momentum_Z,2), Excess=replace_na(Excess, 0), PnL=cumsum(Excess))  -> asds
View(res)
View(res_)
#            spreads_returns  %>% mutate(Volatility=SpreadVol) %>% select(Contracts, Volatility)) %>% mutate(Volatility=Volatility*sqrt(252)) %>% na.omit %>%
#   group_by(Contracts) %>% reframe(M=mean(Volatility), S=sd(Volatility)*1)
# p <- ggplot(res, aes(x=Contracts, y=M, ymin=M-S, ymax=M+S)) + geom_pointrange(linewidth=1, size=1)
# ggsave(paste(symbol, "_VolSpread.png"), p, width=15, height = 9, dpi=100)
## Performance of trading the front spread by DTE
# res <-  spreads_returns %>%  mutate(Decile = round(DTE1 / 10)) %>% filter(Decile < 10) %>%
#   group_by(Contracts, Decile) %>% reframe(M=mean(scaledreturns, na.rm=T), S=sd(scaledreturns, na.rm=T)/sqrt(n())*2)
# p <- ggplot(res) + geom_errorbar(aes(x=Decile, ymin=M-S, ymax=M+S), width=0.5) + facet_wrap(~Contracts, scales = "free")  + geom_hline(yintercept = 0)+scale_x_continuous(breaks = 0:9)
# ggsave(paste(symbol, "_DTE.png"), p, width=15, height = 9, dpi=100)
## Performance of trading the front spread, conditional on predictors
res_ <- spreads_returns %>%  group_by(Contracts) %>%  arrange(Date) %>%  filter(n() > 252+32) %>% mutate(
Level_Z = runZscore(Price1, 252),
LevelLag = ntile(lag(Level_Z), 5),
Slope_Z = runZscore(SpreadLog, 252),
SlopeLag = ntile(lag(Slope_Z), 5),
Momentum = EMA(SpreadReturnLog, 32),
Momentum_Z = runZscore(Momentum, 252),
MomentumLag = ntile(lag(Momentum_Z,1), 5),
Carry = SpreadLog / (abs(DTE2-DTE1) / 252),
CarryLag = ntile(lag(Carry), 5)
) %>% na.omit
res <- res_ %>% group_by(Contracts, MomentumLag) %>% reframe(M = mean(scaledreturns), S = sd(scaledreturns)/sqrt(n())*2)
p <- ggplot(res) + geom_errorbar(aes(x=MomentumLag, ymin=M-S, ymax=M+S), width=0.25) + facet_wrap(~Contracts, scales = "free")  + geom_hline(yintercept = 0)+scale_x_continuous(breaks = 0:9)
p
#            spreads_returns  %>% mutate(Volatility=SpreadVol) %>% select(Contracts, Volatility)) %>% mutate(Volatility=Volatility*sqrt(252)) %>% na.omit %>%
#   group_by(Contracts) %>% reframe(M=mean(Volatility), S=sd(Volatility)*1)
# p <- ggplot(res, aes(x=Contracts, y=M, ymin=M-S, ymax=M+S)) + geom_pointrange(linewidth=1, size=1)
# ggsave(paste(symbol, "_VolSpread.png"), p, width=15, height = 9, dpi=100)
## Performance of trading the front spread by DTE
# res <-  spreads_returns %>%  mutate(Decile = round(DTE1 / 10)) %>% filter(Decile < 10) %>%
#   group_by(Contracts, Decile) %>% reframe(M=mean(scaledreturns, na.rm=T), S=sd(scaledreturns, na.rm=T)/sqrt(n())*2)
# p <- ggplot(res) + geom_errorbar(aes(x=Decile, ymin=M-S, ymax=M+S), width=0.5) + facet_wrap(~Contracts, scales = "free")  + geom_hline(yintercept = 0)+scale_x_continuous(breaks = 0:9)
# ggsave(paste(symbol, "_DTE.png"), p, width=15, height = 9, dpi=100)
## Performance of trading the front spread, conditional on predictors
res_ <- spreads_returns %>%  group_by(Contracts) %>%  arrange(Date) %>%  filter(n() > 252+32) %>% mutate(
Level_Z = runZscore(Price1, 252),
LevelLag = ntile(lag(Level_Z), 5),
Slope_Z = runZscore(SpreadLog, 252),
SlopeLag = ntile(lag(Slope_Z), 5),
Momentum = EMA(SpreadReturnLog, 32),
Momentum_Z = runZscore(Momentum, 252),
MomentumLag = ntile(lag(Momentum_Z,2), 5),
Carry = SpreadLog / (abs(DTE2-DTE1) / 252),
CarryLag = ntile(lag(Carry), 5)
) %>% na.omit
res <- res_ %>% group_by(Contracts, MomentumLag) %>% reframe(M = mean(scaledreturns), S = sd(scaledreturns)/sqrt(n())*2)
p <- ggplot(res) + geom_errorbar(aes(x=MomentumLag, ymin=M-S, ymax=M+S), width=0.25) + facet_wrap(~Contracts, scales = "free")  + geom_hline(yintercept = 0)+scale_x_continuous(breaks = 0:9)
p
write_rds(Futures_long, "/home/marco/trading/HistoricalData/Barchart/Futures_long.RDS")
write_rds(Spreads, "/home/marco/trading/HistoricalData/Barchart/Spreads.RDS")
# Plot spreads stuff
Futures_long <- read_rds( "/home/marco/trading/HistoricalData/Barchart/Futures_long.RDS")
Spreads <- read_rds( "/home/marco/trading/HistoricalData/Barchart/Spreads.RDS")
for(symbol in names(Spreads)){
print(symbol)
#if(symbol != "GR") next
spreads <- Spreads[[symbol]]
# Calculate vol adj spread returns, ignore the last trading day and contracts shorter than the running window
spreads_returns <- spreads %>% filter(Date > "2000-01-01" &  DTE1 > 0) %>%  group_by(Contracts) %>% arrange(Date) %>% na.omit %>% filter(n() > 32 ) %>%
mutate(
SpreadVol = runSD(SpreadReturnLog, 32), SpreadVol = na.locf(SpreadVol, na.rm=F),
FrontVol = runSD(ReturnLog1, 32), FrontVol = na.locf(FrontVol, na.rm=F),
scaledreturns = 0.2 / lag(SpreadVol) * SpreadReturnLog * sqrt(252),
scaledreturns = replace(scaledreturns, is.infinite(scaledreturns) | is.na(scaledreturns), 0),
SpreadLogAdj = SpreadLog / SpreadVol
) %>%   ungroup %>%    na.omit()
# Plot the spreads
# p <- ggplot(spreads_returns, aes(x=Date, y=SpreadLog, color=Contracts)) + geom_line(linewidth=1) + ggtitle(symbol) + scale_color_colorblind()
# ggsave(paste(symbol, "_Spreads.png"), p, width=15, height = 9, dpi=100)
# res <-  spreads_returns %>% group_by(Contracts) %>%  arrange(Date) %>%  mutate(SpreadCumulative = cumsum(SpreadReturn))
# p <- ggplot(res, aes(x=Date, y=SpreadCumulative, color=Contracts)) + geom_line(linewidth=2) + ggtitle(symbol) + scale_color_colorblind()
# ggsave(paste(symbol, "_SpreadCumulative.png"), p, width=15, height = 9, dpi=100)
# # Volatility of the spreads compared to the front outright contract
# res <- rbind(spreads_returns %>% mutate(Volatility = runSD(Return1, 32)) %>% select(Volatility) %>% mutate(Contracts=" Front"),
#            spreads_returns  %>% mutate(Volatility=SpreadVol) %>% select(Contracts, Volatility)) %>% mutate(Volatility=Volatility*sqrt(252)) %>% na.omit %>%
#   group_by(Contracts) %>% reframe(M=mean(Volatility), S=sd(Volatility)*1)
# p <- ggplot(res, aes(x=Contracts, y=M, ymin=M-S, ymax=M+S)) + geom_pointrange(linewidth=1, size=1)
# ggsave(paste(symbol, "_VolSpread.png"), p, width=15, height = 9, dpi=100)
## Performance of trading the front spread by DTE
# res <-  spreads_returns %>%  mutate(Decile = round(DTE1 / 10)) %>% filter(Decile < 10) %>%
#   group_by(Contracts, Decile) %>% reframe(M=mean(scaledreturns, na.rm=T), S=sd(scaledreturns, na.rm=T)/sqrt(n())*2)
# p <- ggplot(res) + geom_errorbar(aes(x=Decile, ymin=M-S, ymax=M+S), width=0.5) + facet_wrap(~Contracts, scales = "free")  + geom_hline(yintercept = 0)+scale_x_continuous(breaks = 0:9)
# ggsave(paste(symbol, "_DTE.png"), p, width=15, height = 9, dpi=100)
## Performance of trading the front spread, conditional on predictors
lagging <- 2
res_ <- spreads_returns %>%  group_by(Contracts) %>%  arrange(Date) %>%  filter(n() > 252+32) %>% mutate(
Level_Z = runZscore(Price1, 252),
LevelLag = ntile(lag(Level_Z, lagging), 5),
Slope_Z = runZscore(SpreadLog, 252),
SlopeLag = ntile(lag(Slope_Z, lagging), 5),
Momentum = EMA(SpreadReturnLog, 32),
Momentum_Z = runZscore(Momentum, 252),
MomentumLag = ntile(lag(Momentum_Z, lagging), 5),
Carry = SpreadLog / (abs(DTE2-DTE1) / 252),
CarryLag = ntile(lag(Carry, lagging), 5)
) %>% na.omit
res <- res_ %>% group_by(Contracts, LevelLag) %>% reframe(M=mean(scaledreturns, na.rm=T), S=sd(scaledreturns, na.rm=T)/sqrt(n())*2)
p <- ggplot(res) + geom_errorbar(aes(x=LevelLag, ymin=M-S, ymax=M+S), width=0.25) + facet_wrap(~Contracts, scales = "free")  + geom_hline(yintercept = 0)+scale_x_continuous(breaks = 0:9)
ggsave(paste(symbol, "_Level.png"), p, width=15, height = 9, dpi=100)
res <- res_ %>% group_by(Contracts, SlopeLag) %>% reframe(M = mean(scaledreturns), S = sd(scaledreturns)/sqrt(n())*2) %>% na.omit
p <- ggplot(res) + geom_errorbar(aes(x=SlopeLag, ymin=M-S, ymax=M+S), width=0.25) + facet_wrap(~Contracts, scales = "free")  + geom_hline(yintercept = 0)+scale_x_continuous(breaks = 0:9)
ggsave(paste(symbol, "_Slope.png"), p, width=15, height = 9, dpi=100)
res <- res_ %>% group_by(Contracts, MomentumLag) %>% reframe(M = mean(scaledreturns), S = sd(scaledreturns)/sqrt(n())*2)
p <- ggplot(res) + geom_errorbar(aes(x=MomentumLag, ymin=M-S, ymax=M+S), width=0.25) + facet_wrap(~Contracts, scales = "free")  + geom_hline(yintercept = 0)+scale_x_continuous(breaks = 0:9)
ggsave(paste(symbol, "_Momentum.png"), p, width=15, height = 9, dpi=100)
res <- res_ %>% group_by(Contracts, CarryLag) %>% reframe(M=mean(scaledreturns, na.rm=T), S=sd(scaledreturns, na.rm=T)/sqrt(n())*2)
p <- ggplot(res) + geom_errorbar(aes(x=CarryLag, ymin=M-S, ymax=M+S), width=0.25) + facet_wrap(~Contracts, scales = "free")  + geom_hline(yintercept = 0)+scale_x_continuous(breaks = 0:9)
ggsave(paste(symbol, "_Carry.png"), p, width=15, height = 9, dpi=100)
next
## Various pnl plots
res <-  spreads_returns %>% group_by(Contracts) %>%  arrange(Date) %>%  mutate(cumreturns = cumsum(-scaledreturns))
p <- ggplot(res, aes(x=Date, y=cumreturns, color=Contracts)) + geom_line(linewidth=2) + ggtitle(symbol) + scale_color_colorblind()
ggsave(paste(symbol, "_PnL_VolAdj.png"), p, width=15, height = 9, dpi=100)
res_ <- spreads_returns %>%  group_by(Contracts) %>%  arrange(Date) %>%  filter(n() > 252+32) %>% mutate(
LevelLag = run_ntile(lag(Price1), 252, 5),
Slope_Z = runZscore(SpreadLog, 252), SlopeLag = lag(Slope_Z),
Momentum = EMA(SpreadReturn, 32), Momentum_Z = runZscore(Momentum, 252), MomentumLag = lag(Momentum_Z))
res <- mutate(res_, weightedreturns = (scaledreturns * SlopeLag)  %>% replace(., is.na(.), 0), cumreturns = cumsum(weightedreturns))
p <- ggplot(res, aes(x=Date, y=cumreturns, color=Contracts)) + geom_line(linewidth=2) + ggtitle(symbol) + scale_color_colorblind() + ylab("Returns Slope Adjusted")
ggsave(paste(symbol, "_PnL_SlopeAdj.png"), p, width=15, height = 9, dpi=100)
res <- mutate(res_, weightedreturns = (scaledreturns * MomentumLag)  %>% replace(., is.na(.), 0), cumreturns = cumsum(weightedreturns))
p <- ggplot(res, aes(x=Date, y=cumreturns, color=Contracts)) + geom_line(linewidth=2) + ggtitle(symbol) + scale_color_colorblind() + ylab("Returns Momentum Adjusted")
ggsave(paste(symbol, "_PnL_MomentumAdj.png"), p, width=15, height = 9, dpi=100)
}
symbol <- "VI"
#if(symbol != "GR") next
spreads <- Spreads[[symbol]]
# Calculate vol adj spread returns, ignore the last trading day and contracts shorter than the running window
spreads_returns <- spreads %>% filter(Date > "2000-01-01" &  DTE1 > 0) %>%  group_by(Contracts) %>% arrange(Date) %>% na.omit %>% filter(n() > 32 ) %>%
mutate(
SpreadVol = runSD(SpreadReturnLog, 32), SpreadVol = na.locf(SpreadVol, na.rm=F),
FrontVol = runSD(ReturnLog1, 32), FrontVol = na.locf(FrontVol, na.rm=F),
scaledreturns = 0.2 / lag(SpreadVol) * SpreadReturnLog * sqrt(252),
scaledreturns = replace(scaledreturns, is.infinite(scaledreturns) | is.na(scaledreturns), 0),
SpreadLogAdj = SpreadLog / SpreadVol
) %>%   ungroup %>%    na.omit()
#            spreads_returns  %>% mutate(Volatility=SpreadVol) %>% select(Contracts, Volatility)) %>% mutate(Volatility=Volatility*sqrt(252)) %>% na.omit %>%
#   group_by(Contracts) %>% reframe(M=mean(Volatility), S=sd(Volatility)*1)
# p <- ggplot(res, aes(x=Contracts, y=M, ymin=M-S, ymax=M+S)) + geom_pointrange(linewidth=1, size=1)
# ggsave(paste(symbol, "_VolSpread.png"), p, width=15, height = 9, dpi=100)
## Performance of trading the front spread by DTE
# res <-  spreads_returns %>%  mutate(Decile = round(DTE1 / 10)) %>% filter(Decile < 10) %>%
#   group_by(Contracts, Decile) %>% reframe(M=mean(scaledreturns, na.rm=T), S=sd(scaledreturns, na.rm=T)/sqrt(n())*2)
# p <- ggplot(res) + geom_errorbar(aes(x=Decile, ymin=M-S, ymax=M+S), width=0.5) + facet_wrap(~Contracts, scales = "free")  + geom_hline(yintercept = 0)+scale_x_continuous(breaks = 0:9)
# ggsave(paste(symbol, "_DTE.png"), p, width=15, height = 9, dpi=100)
## Performance of trading the front spread, conditional on predictors
lagging <- 2
res_ <- spreads_returns %>%  group_by(Contracts) %>%  arrange(Date) %>%  filter(n() > 252+32) %>% mutate(
Level_Z = runZscore(Price1, 252),
LevelDecile = ntile(Level_Z, 5),
Slope_Z = runZscore(SpreadLog, 252),
SlopeDecile = ntile(Slope_Z, 5),
Momentum = EMA(SpreadReturnLog, 32),
Momentum_Z = runZscore(Momentum, 252),
MomentumDecile = ntile(Momentum_Z, 5),
Carry = SpreadLog / (abs(DTE2-DTE1) / 252),
CarryDecile = ntile(Carry, 5),
ReturnLead = lead(SpreadReturnLog, lagging)
) %>% na.omit
res <- res_ %>% group_by(Contracts, LevelLag) %>% reframe(M=mean(ReturnLead, na.rm=T), S=sd(ReturnLead, na.rm=T)/sqrt(n())*2)
p <- ggplot(res) + geom_errorbar(aes(x=LevelLag, ymin=M-S, ymax=M+S), width=0.25) + facet_wrap(~Contracts, scales = "free")  + geom_hline(yintercept = 0)+scale_x_continuous(breaks = 0:9)
res <- res_ %>% group_by(Contracts, LevelDecile) %>% reframe(M=mean(ReturnLead, na.rm=T), S=sd(ReturnLead, na.rm=T)/sqrt(n())*2)
p <- ggplot(res) + geom_errorbar(aes(x=LevelDecile, ymin=M-S, ymax=M+S), width=0.25) + facet_wrap(~Contracts, scales = "free")  + geom_hline(yintercept = 0)+scale_x_continuous(breaks = 0:9)
p
#            spreads_returns  %>% mutate(Volatility=SpreadVol) %>% select(Contracts, Volatility)) %>% mutate(Volatility=Volatility*sqrt(252)) %>% na.omit %>%
#   group_by(Contracts) %>% reframe(M=mean(Volatility), S=sd(Volatility)*1)
# p <- ggplot(res, aes(x=Contracts, y=M, ymin=M-S, ymax=M+S)) + geom_pointrange(linewidth=1, size=1)
# ggsave(paste(symbol, "_VolSpread.png"), p, width=15, height = 9, dpi=100)
## Performance of trading the front spread by DTE
# res <-  spreads_returns %>%  mutate(Decile = round(DTE1 / 10)) %>% filter(Decile < 10) %>%
#   group_by(Contracts, Decile) %>% reframe(M=mean(scaledreturns, na.rm=T), S=sd(scaledreturns, na.rm=T)/sqrt(n())*2)
# p <- ggplot(res) + geom_errorbar(aes(x=Decile, ymin=M-S, ymax=M+S), width=0.5) + facet_wrap(~Contracts, scales = "free")  + geom_hline(yintercept = 0)+scale_x_continuous(breaks = 0:9)
# ggsave(paste(symbol, "_DTE.png"), p, width=15, height = 9, dpi=100)
## Performance of trading the front spread, conditional on predictors
lagging <- 1
res_ <- spreads_returns %>%  group_by(Contracts) %>%  arrange(Date) %>%  filter(n() > 252+32) %>% mutate(
Level_Z = runZscore(Price1, 252),
LevelDecile = ntile(Level_Z, 5),
Slope_Z = runZscore(SpreadLog, 252),
SlopeDecile = ntile(Slope_Z, 5),
Momentum = EMA(SpreadReturnLog, 32),
Momentum_Z = runZscore(Momentum, 252),
MomentumDecile = ntile(Momentum_Z, 5),
Carry = SpreadLog / (abs(DTE2-DTE1) / 252),
CarryDecile = ntile(Carry, 5),
ReturnLead = lead(SpreadReturnLog, lagging)
) %>% na.omit
res <- res_ %>% group_by(Contracts, LevelDecile) %>% reframe(M=mean(ReturnLead, na.rm=T), S=sd(ReturnLead, na.rm=T)/sqrt(n())*2)
p <- ggplot(res) + geom_errorbar(aes(x=LevelDecile, ymin=M-S, ymax=M+S), width=0.25) + facet_wrap(~Contracts, scales = "free")  + geom_hline(yintercept = 0)+scale_x_continuous(breaks = 0:9)
p
#            spreads_returns  %>% mutate(Volatility=SpreadVol) %>% select(Contracts, Volatility)) %>% mutate(Volatility=Volatility*sqrt(252)) %>% na.omit %>%
#   group_by(Contracts) %>% reframe(M=mean(Volatility), S=sd(Volatility)*1)
# p <- ggplot(res, aes(x=Contracts, y=M, ymin=M-S, ymax=M+S)) + geom_pointrange(linewidth=1, size=1)
# ggsave(paste(symbol, "_VolSpread.png"), p, width=15, height = 9, dpi=100)
## Performance of trading the front spread by DTE
# res <-  spreads_returns %>%  mutate(Decile = round(DTE1 / 10)) %>% filter(Decile < 10) %>%
#   group_by(Contracts, Decile) %>% reframe(M=mean(scaledreturns, na.rm=T), S=sd(scaledreturns, na.rm=T)/sqrt(n())*2)
# p <- ggplot(res) + geom_errorbar(aes(x=Decile, ymin=M-S, ymax=M+S), width=0.5) + facet_wrap(~Contracts, scales = "free")  + geom_hline(yintercept = 0)+scale_x_continuous(breaks = 0:9)
# ggsave(paste(symbol, "_DTE.png"), p, width=15, height = 9, dpi=100)
## Performance of trading the front spread, conditional on predictors
lagging <- 2
res_ <- spreads_returns %>%  group_by(Contracts) %>%  arrange(Date) %>%  filter(n() > 252+32) %>% mutate(
Level_Z = runZscore(Price1, 252),
LevelDecile = ntile(Level_Z, 5),
Slope_Z = runZscore(SpreadLog, 252),
SlopeDecile = ntile(Slope_Z, 5),
Momentum = EMA(SpreadReturnLog, 32),
Momentum_Z = runZscore(Momentum, 252),
MomentumDecile = ntile(Momentum_Z, 5),
Carry = SpreadLog / (abs(DTE2-DTE1) / 252),
CarryDecile = ntile(Carry, 5),
ReturnLead = lead(scaledreturns, lagging)
) %>% na.omit
res <- res_ %>% group_by(Contracts, LevelDecile) %>% reframe(M=mean(ReturnLead, na.rm=T), S=sd(ReturnLead, na.rm=T)/sqrt(n())*2)
p <- ggplot(res) + geom_errorbar(aes(x=LevelDecile, ymin=M-S, ymax=M+S), width=0.25) + facet_wrap(~Contracts, scales = "free")  + geom_hline(yintercept = 0)+scale_x_continuous(breaks = 0:9)
p
symbol <- "CT"
print(symbol)
spreads <- Spreads[[symbol]]
spreads_returns <- spreads %>% filter(Date > "2000-01-01" &  DTE1 > 0) %>%  group_by(Contracts) %>% arrange(Date) %>% na.omit %>% filter(n() > 32 ) %>%
mutate(SpreadVol = runSD(SpreadReturnLog, 32),SpreadVol = na.locf(SpreadVol, na.rm=F), scaledreturns = 0.2 / lag(SpreadVol) * SpreadReturnLog * sqrt(252), scaledreturns = replace(scaledreturns, is.infinite(scaledreturns), 0),
) %>% filter(abs(scaledreturns) < sd(scaledreturns, na.rm=T)*2) %>%   ungroup %>%    na.omit()
infos <- to_load[to_load$Symbol==symbol,][,2:3] %>% unlist
res_ <- spreads_returns %>%  group_by(Contracts) %>%  arrange(Date) %>%  filter(n() > 252+32) %>% mutate(
Level_Z = runZscore(Price1, 252),
LevelLag = ntile(lag(Level_Z), 5),
Slope_Z = runZscore(SpreadLog, 252),
SlopeLag = ntile(lag(Slope_Z), 5),
Momentum = EMA(SpreadReturnLog, 32),
Momentum_Z = runZscore(Momentum, 252),
MomentumLag = ntile(lag(Momentum_Z), 5),
Carry = SpreadLog / (abs(DTE2-DTE1) / 252),
CarryLag = ntile(lag(Carry), 5)
) %>% na.omit
res_ %>% na.omit %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~0), Excess = SpreadReturn * lag(-Momentum_Z), PnL=cumsum(Excess)) %>% filter(Contracts=="c_12") %>% pull(Excess) %>% na.omit-> a
res_ %>% na.omit %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~0), Excess = SpreadReturnLog * lag(-Momentum_Z), PnL=cumsum(Excess)) %>% filter(Contracts=="c_12") %>% pull(Excess) %>% na.omit-> a
mean(a)/sd(a)*16
res_ %>% na.omit %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~Momentum_Z), Excess = SpreadReturnLog * lag(-Momentum_Z), PnL=cumsum(Excess)) %>% filter(Contracts=="c_12") %>% pull(Excess) %>% na.omit-> a
mean(a)/sd(a)*16
head(res_)
res_ %>% na.omit %>% filter(Contracts=="c_34") %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~Momentum_Z), Excess = SpreadReturnLog * lag(-Momentum_Z), PnL=cumsum(Excess))  %>% pull(Excess) %>% na.omit-> a
mean(a)/sd(a)*16
res_ %>% na.omit %>% filter(Contracts=="c_12") %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~Momentum_Z), Excess = SpreadReturnLog * lag(-Momentum_Z), PnL=cumsum(Excess))  %>% pull(Excess) %>% na.omit-> a
mean(a)/sd(a)*16
res_ %>% na.omit %>% filter(Contracts=="c_23") %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~Momentum_Z), Excess = SpreadReturnLog * lag(-Momentum_Z), PnL=cumsum(Excess))  %>% pull(Excess) %>% na.omit-> a
mean(a)/sd(a)*16
res_ %>% na.omit %>% filter(Contracts=="c_34") %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~Momentum_Z), Excess = SpreadReturnLog * lag(-Momentum_Z), PnL=cumsum(Excess))  %>% pull(Excess) %>% na.omit-> a
mean(a)/sd(a)*16
res_ %>% na.omit %>% filter(Contracts=="c_45") %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~Momentum_Z), Excess = SpreadReturnLog * lag(-Momentum_Z), PnL=cumsum(Excess))  %>% pull(Excess) %>% na.omit-> a
mean(a)/sd(a)*16
res_ %>% na.omit %>% filter(Contracts=="c_34") %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~Momentum_Z), Excess = SpreadReturnLog * lag(-Momentum_Z,2), PnL=cumsum(Excess))  %>% pull(Excess) %>% na.omit-> a
mean(a)/sd(a)*16
res_ %>% na.omit %>% filter(Contracts=="c_34") %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~Momentum_Z), Excess = SpreadReturnLog * lag(-Momentum_Z,3), PnL=cumsum(Excess))  %>% pull(Excess) %>% na.omit-> a
mean(a)/sd(a)*16
res_ %>% ungroup %>% filter(Contracts=="c_34") %>% select(LevelLag, SlopeLag, MomentumLag, CarryLag, SpreadReturn) -> a
res_ <- spreads_returns %>%  group_by(Contracts) %>%  arrange(Date) %>%  filter(n() > 252+32) %>% mutate(
Level_Z = runZscore(Price1, 252),
LevelDecile = ntile(Level_Z, 5),
Slope_Z = runZscore(SpreadLog, 252),
SlopeDecile = ntile(Slope_Z, 5),
Momentum = EMA(SpreadReturnLog, 32),
Momentum_Z = runZscore(Momentum, 252),
MomentumDecile = ntile(Momentum_Z, 5),
Carry = SpreadLog / (abs(DTE2-DTE1) / 252),
CarryDecile = ntile(Carry, 5),
ReturnLead = lead(scaledreturns, lagging)
) %>% na.omit
res_ %>% ungroup %>% filter(Contracts=="c_34") %>% select(LevelDecile, SlopeDecile, MomentumDecile, CarryDecile, ReturnLead) -> a
lm(ReturnLead~., data=a) %>% summary
lagging
res_ %>% ungroup %>% filter(Contracts=="c_34") %>% select(Level_Z, Slope_Z, Momentum_Z, Carry, ReturnLead) -> a
lm(ReturnLead~., data=a) %>% summary
res_ %>% na.omit %>% filter(Contracts=="c_34") %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~Momentum_Z), Excess = SpreadReturnLog * lag(-Momentum_Z,3), PnL=cumsum(Excess)) -> a
res_ %>% na.omit %>% filter(Contracts=="c_34") %>% pull(Momentum_Z) %>% hist
res_ %>% na.omit %>% filter(Contracts=="c_34") %>% pull(Momentum_Z) %>% sd
res_ %>% na.omit %>% filter(Contracts=="c_34") %>% pull(Momentum_Z) %>% tail(252) %>% plot.ts
mean(a$Excess)/sd(a$Excess) * 16
with(na.omit(a), mean(a)/sd(a) * 16)
with(na.omit(a), mean(Excess)/sd(Excess) * 16)
mean(a$Excess, na.rm=T)/sd(a$Excess, na.rm=T) * 16
res_ %>% na.omit %>% filter(Contracts=="c_34") %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~Momentum_Z), Excess = SpreadReturnLog * lag(-Momentum_Z, 1), PnL=cumsum(Excess)) -> a
mean(a$Excess, na.rm=T)/sd(a$Excess, na.rm=T) * 16
res_ %>% na.omit %>% filter(Contracts=="c_34") %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~Momentum_Z), Excess = SpreadReturnLog * lag(-Momentum_Z, 1), Excess=replace_na(Excess, 0), PnL=cumsum(Excess)) -> a
mean(a$Excess)/sd(a$Excess) * 16
plot(a$PnL)
res_ %>% na.omit %>% filter(Contracts=="c_34") %>% mutate(Momentum_Z = case_when(Momentum_Z>1 ~ 1, Momentum_Z < -1 ~ -1, TRUE ~Momentum_Z), Excess = SpreadReturnLog * lag(-Momentum_Z, 2), Excess=replace_na(Excess, 0), PnL=cumsum(Excess)) -> a
plot(a$PnL)
res_ %>% na.omit %>% filter(Contracts=="c_34") %>% mutate(Momentum_Z = -sign(Momentum_Z), Excess = SpreadReturnLog * lag(-Momentum_Z, 1), Excess=replace_na(Excess, 0), PnL=cumsum(Excess)) -> a
mean(a$Excess)/sd(a$Excess) * 16
res_ %>% na.omit %>% filter(Contracts=="c_34") %>% mutate(Momentum_Z = sign(Momentum_Z), Excess = SpreadReturnLog * lag(-Momentum_Z, 1), Excess=replace_na(Excess, 0), PnL=cumsum(Excess)) -> a
mean(a$Excess)/sd(a$Excess) * 16
View(a)
res_ %>% na.omit %>% filter(Contracts=="c_34") %>% mutate(Momentum_Z = sign(Momentum_Z), Excess = SpreadReturnPoint * lag(-Momentum_Z, 1), Excess=replace_na(Excess, 0), PnL=cumsum(Excess)) -> a
mean(a$Excess)/sd(a$Excess) * 16
View(a)
rle(a$Momentum_Z)
1(:rle(a$Momentum_Z)$length) * rle(a$Momentum_Z)$length
(1:rle(a$Momentum_Z)$length) * rle(a$Momentum_Z)$length
rep((1:rle(a$Momentum_Z)$length), rle(a$Momentum_Z)$length)
rep((1:rle(a$Momentum_Z)$length), each=rle(a$Momentum_Z)$length)
rep(1:length(rle(a$Momentum_Z)$length), each=rle(a$Momentum_Z)$length)
a$Trade <- rep(1:length(rle(a$Momentum_Z)$length), each=rle(a$Momentum_Z)$length)
a
a$Trade <- rep(1:length(rle(a$Momentum_Z)$length), rle(a$Momentum_Z)$length)
group_by(a, Trade) %>% reframe(M=mean(Excess))
group_by(a, Trade) %>% reframe(M=mean(Excess)) -> b
hist(b$M)
summary(b$M)
{
library(tidyverse)
library(rstan)
library(loo)
library(mvtnorm)
library(cmdstanr)
library(quantmod)
library(forecast)
library(mvtnorm)
library(posterior)
library(bayesplot)
library(reshape2)
library(plotly)
library(dygraphs)
library(tsibble)
source("/home/marco/trading/Systems//Common/Common.R")
setwd("/home/marco/trading/Systems/Monopoly/")
Sys.setlocale("LC_TIME", "en_US.UTF-8")
theme_set(theme_bw(base_size = 32))
}
group_by(a, Trade) %>% reframe(M=sum(Excess)) -> b
summary(b$M)
hist(b$M)
group_by(a, Trade) %>% reframe(M=mean(Excess)) -> b
summary(b$M)
group_by(a, Trade) %>% reframe(M=sum(Excess)) -> b
b
