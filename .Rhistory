jumbo[[n]] <- select(df, Date, Excess)
}
portfolio <- merge_portfolio_list(jumbo)
res <- portfolio_summary(as.matrix(portfolio[,-1]), dates = portfolio$Date, plot_stats = TRUE, symbol_wise = FALSE, benchmark.dates = benchmark.dates, benchmark.returns = benchmark.returns)
print(res$Aggregate %>% unlist)
}
# Strategy 21
# Jumbo
{
jumbo <- list()
IDM = 2.41
FDM <- 1.33
for(n in names(BackAdj)) {
df <- BackAdj[[n]]
df$Risk = calculate_risk(df$Return)
df$Position = lag(target_vol / df$Risk)
df$Backadjusted <- na.locf(df$Backadjusted, na.rm = FALSE)
b1 <- breakout(df$Backadjusted, 10, 0.60)
b2 <- breakout(df$Backadjusted, 20, 0.67)
b3 <- breakout(df$Backadjusted, 40, 0.70)
b4 <- breakout(df$Backadjusted, 80, 0.73)
b5 <- breakout(df$Backadjusted, 160, 0.74)
b6 <- breakout(df$Backadjusted, 320, 0.74)
df$Trade <- rowMeans(cbind(b1, b2, b3, b4, b5, b6))
df$Trade <- df$Trade  * FDM
df$Trade <- lag(ifelse(df$Trade > 20, 20, ifelse(df$Trade < -20, -20, df$Trade )) / 10)
df$Excess <- df$Return * df$Position * df$Trade * IDM
jumbo[[n]] <- select(df, Date, Excess)
}
portfolio <- merge_portfolio_list(jumbo)
res <- portfolio_summary(as.matrix(portfolio[,-1]), dates = portfolio$Date, plot_stats = TRUE, symbol_wise = FALSE, benchmark.dates = benchmark.dates, benchmark.returns = benchmark.returns)
print(res$Aggregate %>% unlist)
}
# Strategy 21
# Jumbo
{
jumbo <- list()
IDM = 2.41
FDM <- 1.33
for(n in names(BackAdj)) {
df <- BackAdj[[n]]
df$Risk = calculate_risk(df$Return)
df$Position = lag(target_vol / df$Risk)
df$Backadjusted <- na.locf(df$Backadjusted, na.rm = FALSE)
b1 <- breakout(df$Backadjusted, 10, 0.60)
b2 <- breakout(df$Backadjusted, 20, 0.67)
b3 <- breakout(df$Backadjusted, 40, 0.70)
b4 <- breakout(df$Backadjusted, 80, 0.73)
b5 <- breakout(df$Backadjusted, 160, 0.74)
b6 <- breakout(df$Backadjusted, 320, 0.74)
df$Trade <- rowMeans(cbind(b1, b2, b3, b4, b5, b6))
df$Trade <- df$Trade  * 1
df$Trade <- lag(ifelse(df$Trade > 20, 20, ifelse(df$Trade < -20, -20, df$Trade )) / 10)
df$Excess <- df$Return * df$Position * df$Trade * IDM
jumbo[[n]] <- select(df, Date, Excess)
}
portfolio <- merge_portfolio_list(jumbo)
res <- portfolio_summary(as.matrix(portfolio[,-1]), dates = portfolio$Date, plot_stats = TRUE, symbol_wise = FALSE, benchmark.dates = benchmark.dates, benchmark.returns = benchmark.returns)
print(res$Aggregate %>% unlist)
}
# Strategy 21
# Jumbo
{
jumbo <- list()
IDM = 2.41
FDM <- 1.33
for(n in names(BackAdj)) {
df <- BackAdj[[n]]
df$Risk = calculate_risk(df$Return)
df$Position = lag(target_vol / df$Risk)
df$Backadjusted <- na.locf(df$Backadjusted, na.rm = FALSE)
b1 <- breakout(df$Backadjusted, 10, 0.60)
b2 <- breakout(df$Backadjusted, 20, 0.67)
b3 <- breakout(df$Backadjusted, 40, 0.70)
b4 <- breakout(df$Backadjusted, 80, 0.73)
b5 <- breakout(df$Backadjusted, 160, 0.74)
b6 <- breakout(df$Backadjusted, 320, 0.74)
df$Trade <- rowMeans(cbind(b1, b2, b3, b4, b5, b6))
df$Trade <- df$Trade  * FDM
df <- multiple_dc(df)
df$Trade <- lag(ifelse(df$Trade > 20, 20, ifelse(df$Trade < -20, -20, df$Trade )) / 10)
df$Excess <- df$Return * df$Position * df$Trade * IDM
jumbo[[n]] <- select(df, Date, Excess)
}
portfolio <- merge_portfolio_list(jumbo)
res <- portfolio_summary(as.matrix(portfolio[,-1]), dates = portfolio$Date, plot_stats = TRUE, symbol_wise = FALSE, benchmark.dates = benchmark.dates, benchmark.returns = benchmark.returns)
print(res$Aggregate %>% unlist)
}
# Strategy 21
# Jumbo
{
jumbo <- list()
IDM = 2.41
FDM <- 1.33
for(n in names(BackAdj)) {
df <- BackAdj[[n]]
df$Risk = calculate_risk(df$Return)
df$Position = lag(target_vol / df$Risk)
df$Backadjusted <- na.locf(df$Backadjusted, na.rm = FALSE)
b1 <- breakout(df$Backadjusted, 5, 0.60)
b2 <- breakout(df$Backadjusted, 21, 0.67)
b3 <- breakout(df$Backadjusted, 63, 0.70)
b4 <- breakout(df$Backadjusted, 252, 0.73)
b5 <- breakout(df$Backadjusted, 504, 0.74)
df$Trade <- rowMeans(cbind(b1, b2, b3, b4, b5))
df$Trade <- df$Trade  * FDM
df$Trade <- lag(ifelse(df$Trade > 20, 20, ifelse(df$Trade < -20, -20, df$Trade )) / 10)
df$Excess <- df$Return * df$Position * df$Trade * IDM
jumbo[[n]] <- select(df, Date, Excess)
}
portfolio <- merge_portfolio_list(jumbo)
res <- portfolio_summary(as.matrix(portfolio[,-1]), dates = portfolio$Date, plot_stats = TRUE, symbol_wise = FALSE, benchmark.dates = benchmark.dates, benchmark.returns = benchmark.returns)
print(res$Aggregate %>% unlist)
}
# Strategy 21
# Jumbo
{
jumbo <- list()
IDM = 2.41
FDM <- 1.33
for(n in names(BackAdj)) {
df <- BackAdj[[n]]
df$Risk = calculate_risk(df$Return)
df$Position = lag(target_vol / df$Risk)
df$Backadjusted <- na.locf(df$Backadjusted, na.rm = FALSE)
b1 <- breakout(df$Backadjusted, 5, 1)
b2 <- breakout(df$Backadjusted, 21, 1)
b3 <- breakout(df$Backadjusted, 63, 1)
b4 <- breakout(df$Backadjusted, 252, 1)
b5 <- breakout(df$Backadjusted, 504, 1)
df$Trade <- rowMeans(cbind(b1, b2, b3, b4, b5))
df$Trade <- df$Trade  * FDM
df$Trade <- lag(ifelse(df$Trade > 20, 20, ifelse(df$Trade < -20, -20, df$Trade )) / 10)
df$Excess <- df$Return * df$Position * df$Trade * IDM
jumbo[[n]] <- select(df, Date, Excess)
}
portfolio <- merge_portfolio_list(jumbo)
res <- portfolio_summary(as.matrix(portfolio[,-1]), dates = portfolio$Date, plot_stats = TRUE, symbol_wise = FALSE, benchmark.dates = benchmark.dates, benchmark.returns = benchmark.returns)
print(res$Aggregate %>% unlist)
}
df <- BackAdj[[n]]
df$Risk = calculate_risk(df$Return)
df$Position = lag(target_vol / df$Risk)
df$NP <- 0
for(i in 2:nrow(df)) {
df$NP[i] <-  (100 * (df$Backadjusted[i] - df$Backadjusted[i-1]) / (df$Risk[i] * df$Nearest[i] / 16)) + df$NP[i-1]
if(is.na(df$NP[i]))
df$NP[i] <- df$NP[i-1]
}
df <- merge(df, filter(R, Class==df$Class[1]) %>%  select(Date, A), by="Date") # R obtained from before
df$R  <- (df$NP - df$A) / 100
df$O <- -EMA(c(rep(NA, 256*5), diff(df$R, lag=256*5) / 256*5), 30) * 7.27
df$Trade <- lag(df$O)
df$Trade <- df$Trade * FDM
df$Trade %>% plot.ts
lapply(BackAdj, function(x) sum(x$Return))+
lapply(BackAdj, function(x) sum(x$Return))
lapply(BackAdj, function(x) sum(!is.na(x$Return)))
lapply(BackAdj, function(x) sum(!is.na(x$Return))) %>% sort
lapply(BackAdj, function(x) sum(!is.na(x$Return))) %>% unlist %>% sort
n <- "ZB"
df <- BackAdj[[n]]
df$Risk = calculate_risk(df$Return)
df$Position = lag(target_vol / df$Risk)
df$NP <- 0
for(i in 2:nrow(df)) {
df$NP[i] <-  (100 * (df$Backadjusted[i] - df$Backadjusted[i-1]) / (df$Risk[i] * df$Nearest[i] / 16)) + df$NP[i-1]
if(is.na(df$NP[i]))
df$NP[i] <- df$NP[i-1]
}
df <- merge(df, filter(R, Class==df$Class[1]) %>%  select(Date, A), by="Date") # R obtained from before
df$R  <- (df$NP - df$A) / 100
df$O <- -EMA(c(rep(NA, 256*5), diff(df$R, lag=256*5) / 256*5), 30) * 7.27
df$Trade <- lag(df$O)
df$Trade %>% plot.ts
df$Trade <- df$Trade * FDM
df$Trade %>% plot.ts
# jumbo (the result is ok, not bad as in the book in table 85)
{
jumbo <- list()
IDM = 2.41
FDM <- 1
for(n in names(BackAdj)) {
df <- BackAdj[[n]]
df$Risk = calculate_risk(df$Return)
df$Position = lag(target_vol / df$Risk)
df$NP <- 0
for(i in 2:nrow(df)) {
df$NP[i] <-  (100 * (df$Backadjusted[i] - df$Backadjusted[i-1]) / (df$Risk[i] * df$Nearest[i] / 16)) + df$NP[i-1]
if(is.na(df$NP[i]))
df$NP[i] <- df$NP[i-1]
}
df <- merge(df, filter(R, Class==df$Class[1]) %>%  select(Date, A), by="Date") # R obtained from before
df$R  <- (df$NP - df$A) / 100
df$O <- -EMA(c(rep(NA, 256*5), diff(df$R, lag=256*5) / 256*5), 30) * 7.27
df$Trade <- lag(df$O)
df$Trade <- df$Trade * FDM
df$Trade <- lag(ifelse(df$Trade > 20, 20, ifelse(df$Trade < -20, -20, df$Trade )) / 10)
df$Excess <- df$Return * df$Position * df$Trade * IDM
jumbo[[n]] <- select(df, Date, Excess)
}
portfolio <- merge_portfolio_list(jumbo)
res <- portfolio_summary(as.matrix(portfolio[,-1]), dates = portfolio$Date, plot_stats = TRUE, symbol_wise = FALSE, benchmark.dates = benchmark.dates, benchmark.returns = benchmark.returns)
print(res$Aggregate %>% unlist)
}
# jumbo (the result is ok, not bad as in the book in table 85)
{
jumbo <- list()
IDM = 2.41
FDM <- 1
for(n in names(BackAdj)) {
df <- BackAdj[[n]]
if(sum(!is.na(df$Return)) < 256*10)
next
df$Risk = calculate_risk(df$Return)
df$Position = lag(target_vol / df$Risk)
df$NP <- 0
for(i in 2:nrow(df)) {
df$NP[i] <-  (100 * (df$Backadjusted[i] - df$Backadjusted[i-1]) / (df$Risk[i] * df$Nearest[i] / 16)) + df$NP[i-1]
if(is.na(df$NP[i]))
df$NP[i] <- df$NP[i-1]
}
df <- merge(df, filter(R, Class==df$Class[1]) %>%  select(Date, A), by="Date") # R obtained from before
df$R  <- (df$NP - df$A) / 100
df$O <- -EMA(c(rep(NA, 256*5), diff(df$R, lag=256*5) / 256*5), 30) * 7.27
df$Trade <- lag(df$O)
df$Trade <- df$Trade * FDM
df$Trade <- lag(ifelse(df$Trade > 20, 20, ifelse(df$Trade < -20, -20, df$Trade )) / 10)
df$Excess <- df$Return * df$Position * df$Trade * IDM
jumbo[[n]] <- select(df, Date, Excess)
}
portfolio <- merge_portfolio_list(jumbo)
res <- portfolio_summary(as.matrix(portfolio[,-1]), dates = portfolio$Date, plot_stats = TRUE, symbol_wise = FALSE, benchmark.dates = benchmark.dates, benchmark.returns = benchmark.returns)
print(res$Aggregate %>% unlist)
}
res <- portfolio_summary(as.matrix(portfolio[,-1]), dates = portfolio$Date, plot_stats = TRUE, symbol_wise = TRUE, benchmark.dates = benchmark.dates, benchmark.returns = benchmark.returns)
View(res$Symbols)
df$R  <- (df$NP - df$A) / 100
df$O <- -EMA(c(rep(NA, 256*5), diff(df$R, lag=256*5) / 256*5), 30) * 7.27
df$Trade <- lag(df$O)
df$Trade <- df$Trade * FDM
df$Trade <- lag(ifelse(df$Trade > 20, 20, ifelse(df$Trade < -20, -20, df$Trade )) / 10)
df$Trade %>% plot.ts
# jumbo (the result is ok, not bad as in the book in table 85)
{
jumbo <- list()
IDM = 2.41
FDM <- 1
for(n in names(BackAdj)) {
df <- BackAdj[[n]]
if(sum(!is.na(df$Return)) < 256*10)
next
df$Risk = calculate_risk(df$Return)
df$Position = lag(target_vol / df$Risk)
df$NP <- 0
for(i in 2:nrow(df)) {
df$NP[i] <-  (100 * (df$Backadjusted[i] - df$Backadjusted[i-1]) / (df$Risk[i] * df$Nearest[i] / 16)) + df$NP[i-1]
if(is.na(df$NP[i]))
df$NP[i] <- df$NP[i-1]
}
df <- merge(df, filter(R, Class==df$Class[1]) %>%  select(Date, A), by="Date") # R obtained from before
df$R  <- (df$NP - df$A)
df$O <- -EMA(c(rep(NA, 256*5), diff(df$R, lag=256*5) / 256*5), 30) * 7.27
df$Trade <- lag(df$O)
df$Trade <- df$Trade * FDM
df$Trade <- lag(ifelse(df$Trade > 20, 20, ifelse(df$Trade < -20, -20, df$Trade )) / 10)
df$Excess <- df$Return * df$Position * df$Trade * IDM
jumbo[[n]] <- select(df, Date, Excess)
}
portfolio <- merge_portfolio_list(jumbo)
res <- portfolio_summary(as.matrix(portfolio[,-1]), dates = portfolio$Date, plot_stats = TRUE, symbol_wise = FALSE, benchmark.dates = benchmark.dates, benchmark.returns = benchmark.returns)
print(res$Aggregate %>% unlist)
}
n
df <- BackAdj[[n]]
df$Risk = calculate_risk(df$Return)
df$Position = lag(target_vol / df$Risk)
df$Forecast8 <- (EMA(df$Backadjusted, 8) -  EMA(df$Backadjusted, 32) ) / (df$Nearest * df$Risk / 16) * 5.95
df$Forecast16 <- (EMA(df$Backadjusted, 16) -  EMA(df$Backadjusted, 64)) / (df$Nearest * df$Risk / 16) * 2.79
df$Forecast32 <- (EMA(df$Backadjusted, 32) -  EMA(df$Backadjusted, 128)) / (df$Nearest * df$Risk / 16) * 2.79
df$Forecast64 <- (EMA(df$Backadjusted, 64) -  EMA(df$Backadjusted, 256)) / (df$Nearest * df$Risk / 16) * 1.91
df$Acc8 <- c(rep(NA, 8), diff(df$Forecast8, 8)) * 1.87
df$Acc16 <- c(rep(NA, 16), diff(df$Forecast16, 16)) * 1.90
df$Acc32 <- c(rep(NA, 32), diff(df$Forecast32, 32)) * 1.98
df$Acc64 <- c(rep(NA, 64), diff(df$Forecast64, 64)) * 2.05
df$Trade <- rowMeans(cbind(df$Trade8 , df$Trade16 , df$Trade32 , df$Trade64 ))
df$Trade <- rowMeans(cbind(df$Acc8 , df$Acc16 , df$Acc32 , df$Acc64 ))
df$Trade <- df$Trade  * FDM
df$Trade %>% plot.ts
n
df$Trade %>% hist
df$Trade <- lag(ifelse(df$Trade > 20, 20, ifelse(df$Trade < -20, -20, df$Trade )) / 10)
df$Trade %>% hist
# Strategy 23
# Jumbo
{
jumbo <- list()
IDM = 2.41
FDM <- 1.39
for(n in names(BackAdj)) {
df <- BackAdj[[n]]
df$Risk = calculate_risk(df$Return)
df$Position = lag(target_vol / df$Risk)
df$Forecast8 <- (EMA(df$Backadjusted, 8) -  EMA(df$Backadjusted, 32) ) / (df$Nearest * df$Risk / 16) * 5.95
df$Forecast16 <- (EMA(df$Backadjusted, 16) -  EMA(df$Backadjusted, 64)) / (df$Nearest * df$Risk / 16) * 2.79
df$Forecast32 <- (EMA(df$Backadjusted, 32) -  EMA(df$Backadjusted, 128)) / (df$Nearest * df$Risk / 16) * 2.79
df$Forecast64 <- (EMA(df$Backadjusted, 64) -  EMA(df$Backadjusted, 256)) / (df$Nearest * df$Risk / 16) * 1.91
df$Acc8 <- c(rep(NA, 8), diff(df$Forecast8, 8)) * 1.87
df$Acc16 <- c(rep(NA, 16), diff(df$Forecast16, 16)) * 1.90
df$Acc32 <- c(rep(NA, 32), diff(df$Forecast32, 32)) * 1.98
df$Acc64 <- c(rep(NA, 64), diff(df$Forecast64, 64)) * 2.05
df$Trade <- rowMeans(cbind(df$Acc8 , df$Acc16 , df$Acc32 , df$Acc64 ))
df$Trade <- df$Trade  * FDM
df$Trade <- lag(ifelse(df$Trade > 20, 20, ifelse(df$Trade < -20, -20, df$Trade )) / 10)
df$Excess <- df$Return * df$Position * df$Trade * IDM
jumbo[[n]] <- select(df, Date, Excess)
}
portfolio <- merge_portfolio_list(jumbo)
res <- portfolio_summary(as.matrix(portfolio[,-1]), dates = portfolio$Date, plot_stats = TRUE, symbol_wise = FALSE, benchmark.dates = benchmark.dates, benchmark.returns = benchmark.returns)
print(res$Aggregate %>% unlist)
}
# Strategy 23
# Jumbo
{
jumbo <- list()
IDM = 2.41
FDM <- 1.39
for(n in names(BackAdj)) {
df <- BackAdj[[n]]
df$Risk = calculate_risk(df$Return)
df$Position = lag(target_vol / df$Risk)
df$Forecast8 <- (EMA(df$Backadjusted, 8) -  EMA(df$Backadjusted, 32) ) / (df$Nearest * df$Risk / 16) * 5.95
df$Forecast16 <- (EMA(df$Backadjusted, 16) -  EMA(df$Backadjusted, 64)) / (df$Nearest * df$Risk / 16) * 2.79
df$Forecast32 <- (EMA(df$Backadjusted, 32) -  EMA(df$Backadjusted, 128)) / (df$Nearest * df$Risk / 16) * 2.79
df$Forecast64 <- (EMA(df$Backadjusted, 64) -  EMA(df$Backadjusted, 256)) / (df$Nearest * df$Risk / 16) * 1.91
df$Acc8 <- c(rep(NA, 8), diff(df$Forecast8, 8)) * 1.87
df$Acc16 <- c(rep(NA, 16), diff(df$Forecast16, 16)) * 1.90
df$Acc32 <- c(rep(NA, 32), diff(df$Forecast32, 32)) * 1.98
df$Acc64 <- c(rep(NA, 64), diff(df$Forecast64, 64)) * 2.05
df$Trade <- rowMeans(cbind(df$Acc8 , df$Acc16 , df$Acc32 , df$Acc64 ))
df$Trade <- df$Trade  * 1
df$Trade <- lag(ifelse(df$Trade > 20, 20, ifelse(df$Trade < -20, -20, df$Trade )) / 10)
df$Excess <- df$Return * df$Position * df$Trade * IDM
jumbo[[n]] <- select(df, Date, Excess)
}
portfolio <- merge_portfolio_list(jumbo)
res <- portfolio_summary(as.matrix(portfolio[,-1]), dates = portfolio$Date, plot_stats = TRUE, symbol_wise = FALSE, benchmark.dates = benchmark.dates, benchmark.returns = benchmark.returns)
print(res$Aggregate %>% unlist)
}
# Strategy 23
# Jumbo
{
jumbo <- list()
IDM = 2.41
FDM <- 1.39
for(n in names(BackAdj)) {
df <- BackAdj[[n]]
df$Risk = calculate_risk(df$Return)
df$Position = lag(target_vol / df$Risk)
df$Forecast8 <- (EMA(df$Backadjusted, 8) -  EMA(df$Backadjusted, 32) ) / (df$Nearest * df$Risk / 16) * 5.95
df$Forecast16 <- (EMA(df$Backadjusted, 16) -  EMA(df$Backadjusted, 64)) / (df$Nearest * df$Risk / 16) * 2.79
df$Forecast32 <- (EMA(df$Backadjusted, 32) -  EMA(df$Backadjusted, 128)) / (df$Nearest * df$Risk / 16) * 2.79
df$Forecast64 <- (EMA(df$Backadjusted, 64) -  EMA(df$Backadjusted, 256)) / (df$Nearest * df$Risk / 16) * 1.91
df$Acc8 <- c(rep(NA, 8), diff(df$Forecast8, 8)) * 1.87
df$Acc16 <- c(rep(NA, 16), diff(df$Forecast16, 16)) * 1.90
df$Acc32 <- c(rep(NA, 32), diff(df$Forecast32, 32)) * 1.98
df$Acc64 <- c(rep(NA, 64), diff(df$Forecast64, 64)) * 2.05
df$Trade <- rowMeans(cbind(df$Acc8 , df$Acc16 , df$Acc32 , df$Acc64 ))
df$Trade <- df$Trade  * FDM
df$Trade <- lag(ifelse(df$Trade > 20, 20, ifelse(df$Trade < -20, -20, df$Trade )) / 10)
df$Excess <- df$Return * df$Position * df$Trade * IDM
jumbo[[n]] <- select(df, Date, Excess)
}
portfolio <- merge_portfolio_list(jumbo)
res <- portfolio_summary(as.matrix(portfolio[,-1]), dates = portfolio$Date, plot_stats = TRUE, symbol_wise = FALSE, benchmark.dates = benchmark.dates, benchmark.returns = benchmark.returns)
print(res$Aggregate %>% unlist)
}
df$Trade %>% hist
matplot2(cbind(df$Acc8 , df$Acc16 , df$Acc32 , df$Acc64 ))
df <- BackAdj[[n]]
df$Risk = calculate_risk(df$Return)
df$Position = lag(target_vol / df$Risk)
df$Skew1 <- EMA(-skewness(tail(df$Return, 60)), ceiling(60/4)) * 33.3
df$Skew2 <- EMA(-skewness(tail(df$Return, 120)), ceiling(120/4)) * 37.2
df$Skew3 <- EMA(-skewness(tail(df$Return, 240)), ceiling(240/4)) * 39.2
tail(df$Return, 60)
skewness(tail(df$Return, 60))
sapply(1:length(df$Return), function(x) -skewness(x))
sapply(1:length(df$Return), function(i) -skewness(df$Return[(i-60):i]))
i-60):i
(i-60):i
sapply(1:length(df$Return), function(i) -skewness(df$Return[(i-60-1):i]))
sapply(60:length(df$Return), function(i) -skewness(df$Return[(i-60-1):i]))
sapply(61:length(df$Return), function(i) -skewness(df$Return[(i-60-1):i]))
sapply((60+1):length(df$Return), function(i) -skewness(df$Return[(i-60-1):i]))
skew1 <- sapply((60+1):length(df$Return), function(i) -skewness(df$Return[(i-60-1):i]))
n <- "VI"
df <- BackAdj[[n]]
df$Risk = calculate_risk(df$Return)
df$Position = lag(target_vol / df$Risk)
skew1 <- sapply((60+1):length(df$Return), function(i) -skewness(df$Return[(i-60-1):i]))
skew1 %>% plot.ts
df$Return %>% plot.ts
df$Return %>% tail(2000)%>% plot.ts
df$Return %>% tail(1000)%>% plot.ts
skew1 %>% tail(1000)%>% plot.ts
skew1 %>% tail(2000)%>% plot.ts
?skewness
skew1 <- sapply((60+1):length(df$Return), function(i) -skewness(df$Return[(i-60-1):i], na.rm = TRUE))
skew1 %>% tail(2000)%>% plot.ts
df$Skew1 <- EMA(skew1, ceiling(60/4)) * 33.3
df$Skew1 <- c(rep(NA, ceiling(60/4)), EMA(skew1, ceiling(60/4))) * 33.3
skew1 <- sapply((60+1):length(df$Return), function(i) -skewness(df$Return[(i-60-1):i], na.rm = TRUE))
df$Skew1 <- c(rep(NA, ceiling(60/4)), EMA(skew1, ceiling(60/4))) * 33.3
rep(NA, ceiling(60/4)
rep(NA, ceiling(60/4))
EMA(skew1, ceiling(60/4))
EMA(skew1, ceiling(60/4)) %>% length
rep(NA, ceiling(60/4)) %>% length
nrow(Df)
nrow(df)
skew1 <- c(rep(NA, 60+1),sapply((60+1):length(df$Return), function(i) -skewness(df$Return[(i-60-1):i], na.rm = TRUE)))
skew2 <- c(rep(NA, 120+1),sapply((120+1):length(df$Return), function(i) -skewness(df$Return[(i-120-1):i], na.rm = TRUE)))
skew3 <- c(rep(NA, 240+1),sapply((240+1):length(df$Return), function(i) -skewness(df$Return[(i-240-1):i], na.rm = TRUE)))
df$Skew1 <- c(rep(NA, ceiling(60/4)), EMA(skew1, ceiling(60/4))) * 33.3
df$Skew1 <- c(rep(NA, 60+1), EMA(skew1, ceiling(60/4))) * 33.3
skew1 %>% length
skew1 <- c(rep(NA, 60),sapply((60+1):length(df$Return), function(i) -skewness(df$Return[(i-60-1):i], na.rm = TRUE)))
skew2 <- c(rep(NA, 120),sapply((120+1):length(df$Return), function(i) -skewness(df$Return[(i-120-1):i], na.rm = TRUE)))
skew3 <- c(rep(NA, 240),sapply((240+1):length(df$Return), function(i) -skewness(df$Return[(i-240-1):i], na.rm = TRUE)))
df$Skew1 <- c(rep(NA, 60+1), EMA(skew1, ceiling(60/4))) * 33.3
skew1 %>% length
nrow(df)
df$Skew1 <- c(rep(NA, ceiling(60/4)), EMA(skew1, ceiling(60/4))) * 33.3
EMA(skew1, ceiling(60/4)) %>% length
skew1 <- c(rep(NA, 60),sapply((60+1):length(df$Return), function(i) -skewness(df$Return[(i-60-1):i], na.rm = TRUE)))
skew2 <- c(rep(NA, 120),sapply((120+1):length(df$Return), function(i) -skewness(df$Return[(i-120-1):i], na.rm = TRUE)))
skew3 <- c(rep(NA, 240),sapply((240+1):length(df$Return), function(i) -skewness(df$Return[(i-240-1):i], na.rm = TRUE)))
df$Skew1 <- EMA(skew1, ceiling(60/4)) * 33.3
df$Skew2 <- EMA(skew2, ceiling(120/4)) * 37.2
df$Skew3 <- EMA(skew3, ceiling(240/4)) * 39.2
df$Trade <- rowMeans(cbind(df$Skew1 , df$Skew2 , df$Skew3))
df$Trade <- df$Trade  * FDM
df$Trade <- lag(ifelse(df$Trade > 20, 20, ifelse(df$Trade < -20, -20, df$Trade )) / 10)
df$Trade %>% hist
n
# Strategy 24
# Jumbo
{
jumbo <- list()
IDM = 2.41
FDM <- 1.18
for(n in names(BackAdj)) {
df <- BackAdj[[n]]
df$Risk = calculate_risk(df$Return)
df$Position = lag(target_vol / df$Risk)
skew1 <- c(rep(NA, 60),sapply((60+1):length(df$Return), function(i) -skewness(df$Return[(i-60-1):i], na.rm = TRUE)))
skew2 <- c(rep(NA, 120),sapply((120+1):length(df$Return), function(i) -skewness(df$Return[(i-120-1):i], na.rm = TRUE)))
skew3 <- c(rep(NA, 240),sapply((240+1):length(df$Return), function(i) -skewness(df$Return[(i-240-1):i], na.rm = TRUE)))
df$Skew1 <- EMA(skew1, ceiling(60/4)) * 33.3
df$Skew2 <- EMA(skew2, ceiling(120/4)) * 37.2
df$Skew3 <- EMA(skew3, ceiling(240/4)) * 39.2
df$Trade <- rowMeans(cbind(df$Skew1 , df$Skew2 , df$Skew3))
df$Trade <- df$Trade  * FDM
df$Trade <- lag(ifelse(df$Trade > 20, 20, ifelse(df$Trade < -20, -20, df$Trade )) / 10)
df$Excess <- df$Return * df$Position * df$Trade * IDM
jumbo[[n]] <- select(df, Date, Excess)
}
portfolio <- merge_portfolio_list(jumbo)
res <- portfolio_summary(as.matrix(portfolio[,-1]), dates = portfolio$Date, plot_stats = TRUE, symbol_wise = FALSE, benchmark.dates = benchmark.dates, benchmark.returns = benchmark.returns)
print(res$Aggregate %>% unlist)
}
n
df <- BackAdj[[n]]
df$Risk = calculate_risk(df$Return)
df$Position = lag(target_vol / df$Risk)
skew1 <- c(rep(NA, 60),sapply((60+1):length(df$Return), function(i) -skewness(df$Return[(i-60-1):i], na.rm = TRUE)))
skew2 <- c(rep(NA, 120),sapply((120+1):length(df$Return), function(i) -skewness(df$Return[(i-120-1):i], na.rm = TRUE)))
skew3 <- c(rep(NA, 240),sapply((240+1):length(df$Return), function(i) -skewness(df$Return[(i-240-1):i], na.rm = TRUE)))
df$Skew1 <- EMA(skew1, ceiling(60/4)) * 33.3
skew1 %>% plot
df$Skew1 <- EMA(skew1 %>% na.locf(na.rm=FALSE), ceiling(60/4)) * 33.3
# Strategy 24
# Jumbo
{
jumbo <- list()
IDM = 2.41
FDM <- 1.18
for(n in names(BackAdj)) {
df <- BackAdj[[n]]
df$Risk = calculate_risk(df$Return)
df$Position = lag(target_vol / df$Risk)
skew1 <- c(rep(NA, 60),sapply((60+1):length(df$Return), function(i) -skewness(df$Return[(i-60-1):i], na.rm = TRUE)))
skew2 <- c(rep(NA, 120),sapply((120+1):length(df$Return), function(i) -skewness(df$Return[(i-120-1):i], na.rm = TRUE)))
skew3 <- c(rep(NA, 240),sapply((240+1):length(df$Return), function(i) -skewness(df$Return[(i-240-1):i], na.rm = TRUE)))
df$Skew1 <- EMA(skew1 %>% na.locf(na.rm=FALSE), ceiling(60/4)) * 33.3
df$Skew2 <- EMA(skew2 %>% na.locf(na.rm=FALSE), ceiling(120/4)) * 37.2
df$Skew3 <- EMA(skew3 %>% na.locf(na.rm=FALSE), ceiling(240/4)) * 39.2
df$Trade <- rowMeans(cbind(df$Skew1 , df$Skew2 , df$Skew3))
df$Trade <- df$Trade  * FDM
df$Trade <- lag(ifelse(df$Trade > 20, 20, ifelse(df$Trade < -20, -20, df$Trade )) / 10)
df$Excess <- df$Return * df$Position * df$Trade * IDM
jumbo[[n]] <- select(df, Date, Excess)
}
portfolio <- merge_portfolio_list(jumbo)
res <- portfolio_summary(as.matrix(portfolio[,-1]), dates = portfolio$Date, plot_stats = TRUE, symbol_wise = FALSE, benchmark.dates = benchmark.dates, benchmark.returns = benchmark.returns)
print(res$Aggregate %>% unlist)
}
df$Trade %>% hist
?RV
suppressMessages(library(TTR))
?RV
